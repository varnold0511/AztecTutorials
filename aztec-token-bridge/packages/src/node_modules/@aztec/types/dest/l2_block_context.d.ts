import { L2Block } from './l2_block.js';
import { TxHash } from './tx/tx_hash.js';
/**
 * A wrapper around L2 block used to cache results of expensive operations.
 */
export declare class L2BlockContext {
    /**
     * The underlying L2 block.
     */
    readonly block: L2Block;
    private txHashes;
    constructor(
    /**
     * The underlying L2 block.
     */
    block: L2Block);
    /**
     * Returns the tx hash of the tx in the block at the given index.
     * @param txIndex - The index of the tx in the block.
     * @returns The tx's hash.
     */
    getTxHash(txIndex: number): TxHash;
    /**
     * Returns the tx hashes of all txs in the block.
     * @returns The tx hashes.
     */
    getTxHashes(): TxHash[];
}
//# sourceMappingURL=l2_block_context.d.ts.map