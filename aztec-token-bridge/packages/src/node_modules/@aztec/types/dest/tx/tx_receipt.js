import { AztecAddress } from '@aztec/foundation/aztec-address';
import { TxHash } from '@aztec/types';
/**
 * Possible status of a transaction.
 */
export var TxStatus;
(function (TxStatus) {
    TxStatus["DROPPED"] = "dropped";
    TxStatus["MINED"] = "mined";
    TxStatus["PENDING"] = "pending";
})(TxStatus || (TxStatus = {}));
/**
 * Represents a transaction receipt in the Aztec network.
 * Contains essential information about the transaction including its status, origin, and associated addresses.
 */
export class TxReceipt {
    constructor(
    /**
     * A unique identifier for a transaction.
     */
    txHash, 
    /**
     * The transaction's status.
     */
    status, 
    /**
     * Description of transaction error, if any.
     */
    error, 
    /**
     * The hash of the block containing the transaction.
     */
    blockHash, 
    /**
     * The block number in which the transaction was included.
     */
    blockNumber, 
    /**
     * The deployed contract's address.
     */
    contractAddress, 
    /**
     * Information useful for testing/debugging, set when test flag is set to true in `waitOpts`.
     */
    debugInfo) {
        this.txHash = txHash;
        this.status = status;
        this.error = error;
        this.blockHash = blockHash;
        this.blockNumber = blockNumber;
        this.contractAddress = contractAddress;
        this.debugInfo = debugInfo;
    }
    /**
     * Convert a Tx class object to a plain JSON object.
     * @returns A plain object with Tx properties.
     */
    toJSON() {
        return {
            txHash: this.txHash.toString(),
            status: this.status.toString(),
            error: this.error,
            blockHash: this.blockHash?.toString('hex'),
            blockNumber: this.blockNumber,
            contractAddress: this.contractAddress?.toString(),
        };
    }
    /**
     * Convert a plain JSON object to a Tx class object.
     * @param obj - A plain Tx JSON object.
     * @returns A Tx class object.
     */
    static fromJSON(obj) {
        const txHash = TxHash.fromString(obj.txHash);
        const status = obj.status;
        const error = obj.error;
        const blockHash = obj.blockHash ? Buffer.from(obj.blockHash, 'hex') : undefined;
        const blockNumber = obj.blockNumber ? Number(obj.blockNumber) : undefined;
        const contractAddress = obj.contractAddress ? AztecAddress.fromString(obj.contractAddress) : undefined;
        return new TxReceipt(txHash, status, error, blockHash, blockNumber, contractAddress);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHhfcmVjZWlwdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eC90eF9yZWNlaXB0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUUvRCxPQUFPLEVBQStDLE1BQU0sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUVuRjs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFZLFFBSVg7QUFKRCxXQUFZLFFBQVE7SUFDbEIsK0JBQW1CLENBQUE7SUFDbkIsMkJBQWUsQ0FBQTtJQUNmLCtCQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFKVyxRQUFRLEtBQVIsUUFBUSxRQUluQjtBQUVEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxTQUFTO0lBQ3BCO0lBQ0U7O09BRUc7SUFDSSxNQUFjO0lBQ3JCOztPQUVHO0lBQ0ksTUFBZ0I7SUFDdkI7O09BRUc7SUFDSSxLQUFhO0lBQ3BCOztPQUVHO0lBQ0ksU0FBa0I7SUFDekI7O09BRUc7SUFDSSxXQUFvQjtJQUMzQjs7T0FFRztJQUNJLGVBQThCO0lBQ3JDOztPQUVHO0lBQ0ksU0FBcUI7UUF4QnJCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFJZCxXQUFNLEdBQU4sTUFBTSxDQUFVO1FBSWhCLFVBQUssR0FBTCxLQUFLLENBQVE7UUFJYixjQUFTLEdBQVQsU0FBUyxDQUFTO1FBSWxCLGdCQUFXLEdBQVgsV0FBVyxDQUFTO1FBSXBCLG9CQUFlLEdBQWYsZUFBZSxDQUFlO1FBSTlCLGNBQVMsR0FBVCxTQUFTLENBQVk7SUFDM0IsQ0FBQztJQUVKOzs7T0FHRztJQUNJLE1BQU07UUFDWCxPQUFPO1lBQ0wsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFO1lBQzlCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUM5QixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQztZQUMxQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDN0IsZUFBZSxFQUFFLElBQUksQ0FBQyxlQUFlLEVBQUUsUUFBUSxFQUFFO1NBQ2xELENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBUTtRQUM3QixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QyxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBa0IsQ0FBQztRQUN0QyxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ3hCLE1BQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ2hGLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUMxRSxNQUFNLGVBQWUsR0FBRyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3ZHLE9BQU8sSUFBSSxTQUFTLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUN2RixDQUFDO0NBQ0YifQ==