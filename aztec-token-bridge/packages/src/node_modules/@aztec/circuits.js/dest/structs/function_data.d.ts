/// <reference types="node" resolution-mode="require"/>
import { FunctionAbi, FunctionSelector } from '@aztec/foundation/abi';
import { BufferReader } from '@aztec/foundation/serialize';
import { ContractFunctionDao } from '../index.js';
/**
 * Function description for circuit.
 * @see abis/function_data.hpp
 */
export declare class FunctionData {
    /**
     * Function selector of the function being called.
     */
    selector: FunctionSelector;
    /**
     * Indicates whether the function is only callable by self or not.
     */
    isInternal: boolean;
    /**
     * Indicates whether the function is private or public.
     */
    isPrivate: boolean;
    /**
     * Indicates whether the function is a constructor.
     */
    isConstructor: boolean;
    constructor(
    /**
     * Function selector of the function being called.
     */
    selector: FunctionSelector, 
    /**
     * Indicates whether the function is only callable by self or not.
     */
    isInternal: boolean, 
    /**
     * Indicates whether the function is private or public.
     */
    isPrivate: boolean, 
    /**
     * Indicates whether the function is a constructor.
     */
    isConstructor: boolean);
    static fromAbi(abi: FunctionAbi | ContractFunctionDao): FunctionData;
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer(): Buffer;
    /**
     * Returns whether this instance is empty.
     * @returns True if the function selector is zero.
     */
    isEmpty(): boolean;
    /**
     * Returns a new instance of FunctionData with zero function selector.
     * @param args - Arguments to pass to the constructor.
     * @returns A new instance of FunctionData with zero function selector.
     */
    static empty(args?: {
        /**
         * Indicates whether the function is only callable by self or not.
         */
        isInternal?: boolean;
        /**
         * Indicates whether the function is private or public.
         */
        isPrivate?: boolean;
        /**
         * Indicates whether the function is a constructor.
         */
        isConstructor?: boolean;
    }): FunctionData;
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of FunctionData.
     */
    static fromBuffer(buffer: Buffer | BufferReader): FunctionData;
}
//# sourceMappingURL=function_data.d.ts.map