/// <reference types="node" resolution-mode="require"/>
import { BufferReader } from '@aztec/foundation/serialize';
import { FinalAccumulatedData } from './combined_accumulated_data.js';
import { CombinedConstantData } from './combined_constant_data.js';
/**
 * Public inputs of the final ordering private kernel circuit.
 */
export declare class KernelCircuitPublicInputsFinal {
    /**
     * Final data accumulated for ordering private kernel circuit.
     */
    end: FinalAccumulatedData;
    /**
     * Data which is not modified by the circuits.
     */
    constants: CombinedConstantData;
    /**
     * Indicates whether the input is for a private or public kernel.
     */
    isPrivate: boolean;
    constructor(
    /**
     * Final data accumulated for ordering private kernel circuit.
     */
    end: FinalAccumulatedData, 
    /**
     * Data which is not modified by the circuits.
     */
    constants: CombinedConstantData, 
    /**
     * Indicates whether the input is for a private or public kernel.
     */
    isPrivate: boolean);
    toBuffer(): Buffer;
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of KernelCircuitPublicInputsFinal.
     */
    static fromBuffer(buffer: Buffer | BufferReader): KernelCircuitPublicInputsFinal;
    static empty(): KernelCircuitPublicInputsFinal;
}
/**
 * Public inputs of the final private kernel circuit.
 */
export declare class PrivateKernelPublicInputsFinal extends KernelCircuitPublicInputsFinal {
    constructor(end: FinalAccumulatedData, constants: CombinedConstantData);
}
//# sourceMappingURL=public_inputs_final.d.ts.map