import { BufferReader } from '@aztec/foundation/serialize';
import { serializeToBuffer } from '../../utils/serialize.js';
import { FinalAccumulatedData } from './combined_accumulated_data.js';
import { CombinedConstantData } from './combined_constant_data.js';
/**
 * Public inputs of the final ordering private kernel circuit.
 */
export class KernelCircuitPublicInputsFinal {
    constructor(
    /**
     * Final data accumulated for ordering private kernel circuit.
     */
    end, 
    /**
     * Data which is not modified by the circuits.
     */
    constants, 
    /**
     * Indicates whether the input is for a private or public kernel.
     */
    isPrivate) {
        this.end = end;
        this.constants = constants;
        this.isPrivate = isPrivate;
    }
    toBuffer() {
        return serializeToBuffer(this.end, this.constants, this.isPrivate);
    }
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of KernelCircuitPublicInputsFinal.
     */
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new KernelCircuitPublicInputsFinal(reader.readObject(FinalAccumulatedData), reader.readObject(CombinedConstantData), reader.readBoolean());
    }
    static empty() {
        return new KernelCircuitPublicInputsFinal(FinalAccumulatedData.empty(), CombinedConstantData.empty(), true);
    }
}
/**
 * Public inputs of the final private kernel circuit.
 */
export class PrivateKernelPublicInputsFinal extends KernelCircuitPublicInputsFinal {
    constructor(end, constants) {
        super(end, constants, true);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2lucHV0c19maW5hbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHJ1Y3RzL2tlcm5lbC9wdWJsaWNfaW5wdXRzX2ZpbmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUUzRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUVuRTs7R0FFRztBQUNILE1BQU0sT0FBTyw4QkFBOEI7SUFDekM7SUFDRTs7T0FFRztJQUNJLEdBQXlCO0lBQ2hDOztPQUVHO0lBQ0ksU0FBK0I7SUFDdEM7O09BRUc7SUFDSSxTQUFrQjtRQVJsQixRQUFHLEdBQUgsR0FBRyxDQUFzQjtRQUl6QixjQUFTLEdBQVQsU0FBUyxDQUFzQjtRQUkvQixjQUFTLEdBQVQsU0FBUyxDQUFTO0lBQ3hCLENBQUM7SUFFSixRQUFRO1FBQ04sT0FBTyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUE2QjtRQUM3QyxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdDLE9BQU8sSUFBSSw4QkFBOEIsQ0FDdkMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxFQUN2QyxNQUFNLENBQUMsVUFBVSxDQUFDLG9CQUFvQixDQUFDLEVBQ3ZDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FDckIsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBSztRQUNWLE9BQU8sSUFBSSw4QkFBOEIsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLEVBQUUsRUFBRSxvQkFBb0IsQ0FBQyxLQUFLLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM5RyxDQUFDO0NBQ0Y7QUFFRDs7R0FFRztBQUNILE1BQU0sT0FBTyw4QkFBK0IsU0FBUSw4QkFBOEI7SUFDaEYsWUFBWSxHQUF5QixFQUFFLFNBQStCO1FBQ3BFLEtBQUssQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7Q0FDRiJ9