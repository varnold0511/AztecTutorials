import { FunctionSelector, FunctionType } from '@aztec/foundation/abi';
import { BufferReader } from '@aztec/foundation/serialize';
import { serializeToBuffer } from '../utils/serialize.js';
/**
 * Function description for circuit.
 * @see abis/function_data.hpp
 */
export class FunctionData {
    constructor(
    /**
     * Function selector of the function being called.
     */
    selector, 
    /**
     * Indicates whether the function is only callable by self or not.
     */
    isInternal, 
    /**
     * Indicates whether the function is private or public.
     */
    isPrivate, 
    /**
     * Indicates whether the function is a constructor.
     */
    isConstructor) {
        this.selector = selector;
        this.isInternal = isInternal;
        this.isPrivate = isPrivate;
        this.isConstructor = isConstructor;
    }
    static fromAbi(abi) {
        return new FunctionData(FunctionSelector.fromNameAndParameters(abi.name, abi.parameters), abi.isInternal, abi.functionType === FunctionType.SECRET, abi.name === 'constructor');
    }
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer() {
        return serializeToBuffer(this.selector, this.isInternal, this.isPrivate, this.isConstructor);
    }
    /**
     * Returns whether this instance is empty.
     * @returns True if the function selector is zero.
     */
    isEmpty() {
        return this.selector.isEmpty();
    }
    /**
     * Returns a new instance of FunctionData with zero function selector.
     * @param args - Arguments to pass to the constructor.
     * @returns A new instance of FunctionData with zero function selector.
     */
    static empty(args) {
        return new FunctionData(FunctionSelector.empty(), args?.isInternal ?? false, args?.isPrivate ?? false, args?.isConstructor ?? false);
    }
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of FunctionData.
     */
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new FunctionData(reader.readObject(FunctionSelector), reader.readBoolean(), reader.readBoolean(), reader.readBoolean());
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25fZGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHJ1Y3RzL2Z1bmN0aW9uX2RhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFlLGdCQUFnQixFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUczRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRDs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQUN2QjtJQUNFOztPQUVHO0lBQ0ksUUFBMEI7SUFDakM7O09BRUc7SUFDSSxVQUFtQjtJQUMxQjs7T0FFRztJQUNJLFNBQWtCO0lBQ3pCOztPQUVHO0lBQ0ksYUFBc0I7UUFadEIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7UUFJMUIsZUFBVSxHQUFWLFVBQVUsQ0FBUztRQUluQixjQUFTLEdBQVQsU0FBUyxDQUFTO1FBSWxCLGtCQUFhLEdBQWIsYUFBYSxDQUFTO0lBQzVCLENBQUM7SUFFSixNQUFNLENBQUMsT0FBTyxDQUFDLEdBQXNDO1FBQ25ELE9BQU8sSUFBSSxZQUFZLENBQ3JCLGdCQUFnQixDQUFDLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUNoRSxHQUFHLENBQUMsVUFBVSxFQUNkLEdBQUcsQ0FBQyxZQUFZLEtBQUssWUFBWSxDQUFDLE1BQU0sRUFDeEMsR0FBRyxDQUFDLElBQUksS0FBSyxhQUFhLENBQzNCLENBQUM7SUFDSixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsUUFBUTtRQUNOLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQy9GLENBQUM7SUFFRDs7O09BR0c7SUFDSCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksTUFBTSxDQUFDLEtBQUssQ0FBQyxJQWFuQjtRQUNDLE9BQU8sSUFBSSxZQUFZLENBQ3JCLGdCQUFnQixDQUFDLEtBQUssRUFBRSxFQUN4QixJQUFJLEVBQUUsVUFBVSxJQUFJLEtBQUssRUFDekIsSUFBSSxFQUFFLFNBQVMsSUFBSSxLQUFLLEVBQ3hCLElBQUksRUFBRSxhQUFhLElBQUksS0FBSyxDQUM3QixDQUFDO0lBQ0osQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQTZCO1FBQzdDLE1BQU0sTUFBTSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0MsT0FBTyxJQUFJLFlBQVksQ0FDckIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUNuQyxNQUFNLENBQUMsV0FBVyxFQUFFLEVBQ3BCLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFDcEIsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUNyQixDQUFDO0lBQ0osQ0FBQztDQUNGIn0=