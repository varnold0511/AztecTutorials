/// <reference types="node" resolution-mode="require"/>
import { AztecAddress } from '@aztec/foundation/aztec-address';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { FieldsOf } from '@aztec/foundation/types';
/**
 * Caller context.
 */
export declare class CallerContext {
    /**
     * Address of the caller contract.
     */
    msgSender: AztecAddress;
    /**
     * Storage contract address of the caller contract.
     */
    storageContractAddress: AztecAddress;
    constructor(
    /**
     * Address of the caller contract.
     */
    msgSender: AztecAddress, 
    /**
     * Storage contract address of the caller contract.
     */
    storageContractAddress: AztecAddress);
    /**
     * Returns a new instance of CallerContext with zero values.
     * @returns A new instance of CallerContext with zero values.
     */
    static empty(): CallerContext;
    isEmpty(): boolean;
    static from(fields: FieldsOf<CallerContext>): CallerContext;
    static getFields(fields: FieldsOf<CallerContext>): readonly [AztecAddress, AztecAddress];
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer(): Buffer;
    /**
     * Deserialize this from a buffer.
     * @param buffer - The bufferable type from which to deserialize.
     * @returns The deserialized instance of PublicCallRequest.
     */
    static fromBuffer(buffer: Buffer | BufferReader): CallerContext;
    equals(callerContext: CallerContext): boolean;
}
/**
 * Call request.
 */
export declare class CallRequest {
    /**
     * The hash of the call stack item.
     */
    hash: Fr;
    /**
     * The address of the contract calling the function.
     */
    callerContractAddress: AztecAddress;
    /**
     * The call context of the contract calling the function.
     */
    callerContext: CallerContext;
    constructor(
    /**
     * The hash of the call stack item.
     */
    hash: Fr, 
    /**
     * The address of the contract calling the function.
     */
    callerContractAddress: AztecAddress, 
    /**
     * The call context of the contract calling the function.
     */
    callerContext: CallerContext);
    toBuffer(): Buffer;
    /**
     * Deserializes from a buffer or reader.
     * @param buffer - Buffer or reader to read from.
     * @returns The deserialized instance of CallRequest.
     */
    static fromBuffer(buffer: Buffer | BufferReader): CallRequest;
    isEmpty(): boolean;
    /**
     * Returns a new instance of CallRequest with zero hash, caller contract address and caller context.
     * @returns A new instance of CallRequest with zero hash, caller contract address and caller context.
     */
    static empty(): CallRequest;
    equals(callRequest: CallRequest): boolean;
}
//# sourceMappingURL=call_request.d.ts.map