import { FunctionSelector } from '@aztec/foundation/abi';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { serializeToBuffer } from '../utils/serialize.js';
/**
 * A class representing the "preimage" of a function tree leaf.
 * @see abis/function_leaf_preimage.hpp
 */
export class FunctionLeafPreimage {
    constructor(
    /**
     * Function selector.
     */
    functionSelector, 
    /**
     * Indicates whether the function is only callable by self or not.
     */
    isInternal, 
    /**
     * Indicates whether the function is private or public.
     */
    isPrivate, 
    /**
     * Verification key hash of the function.
     */
    vkHash, 
    /**
     * Hash of the ACIR of the function.
     */
    acirHash) {
        this.functionSelector = functionSelector;
        this.isInternal = isInternal;
        this.isPrivate = isPrivate;
        this.vkHash = vkHash;
        this.acirHash = acirHash;
    }
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer() {
        return serializeToBuffer(this.functionSelector, this.isInternal, this.isPrivate, this.vkHash, this.acirHash);
    }
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of FunctionLeafPreimage.
     */
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new FunctionLeafPreimage(reader.readObject(FunctionSelector), reader.readBoolean(), reader.readBoolean(), Fr.fromBuffer(reader), Fr.fromBuffer(reader));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25fbGVhZl9wcmVpbWFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHJ1Y3RzL2Z1bmN0aW9uX2xlYWZfcHJlaW1hZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDekQsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUUzRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRDs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sb0JBQW9CO0lBQy9CO0lBQ0U7O09BRUc7SUFDSSxnQkFBa0M7SUFDekM7O09BRUc7SUFDSSxVQUFtQjtJQUMxQjs7T0FFRztJQUNJLFNBQWtCO0lBQ3pCOztPQUVHO0lBQ0ksTUFBVTtJQUNqQjs7T0FFRztJQUNJLFFBQVk7UUFoQloscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUlsQyxlQUFVLEdBQVYsVUFBVSxDQUFTO1FBSW5CLGNBQVMsR0FBVCxTQUFTLENBQVM7UUFJbEIsV0FBTSxHQUFOLE1BQU0sQ0FBSTtRQUlWLGFBQVEsR0FBUixRQUFRLENBQUk7SUFDbEIsQ0FBQztJQUVKOzs7T0FHRztJQUNILFFBQVE7UUFDTixPQUFPLGlCQUFpQixDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0csQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQTZCO1FBQzdDLE1BQU0sTUFBTSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0MsT0FBTyxJQUFJLG9CQUFvQixDQUM3QixNQUFNLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLEVBQ25DLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFDcEIsTUFBTSxDQUFDLFdBQVcsRUFBRSxFQUNwQixFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUNyQixFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUN0QixDQUFDO0lBQ0osQ0FBQztDQUNGIn0=