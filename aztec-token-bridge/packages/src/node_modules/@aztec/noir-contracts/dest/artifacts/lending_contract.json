{
    "name": "Lending",
    "functions": [
        {
            "name": "_borrow",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "_deposit",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "_repay",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "_withdraw",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "recipient",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "borrow_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "borrow_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "compute_note_hash_and_nullifier",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "contract_address",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "storage_slot",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "serialized_note",
                    "type": {
                        "kind": "array",
                        "length": 0,
                        "type": {
                            "kind": "field"
                        }
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "array",
                    "length": 4,
                    "type": {
                        "kind": "field"
                    }
                }
            ],
            "bytecode": "H4sIAAAAAAAA/+1VQQ4CIQws7C5sheg/PGHiA/b/rxK0TSYsnuwejDZpgBaGYWggEpGjl03VZ9qb5jdpy2d2c3ZY5Uie/kt4ToY83YCng7po7VI9VI/VrxJn2tcOy1zEYlnbzEMsSn+Sts1ZjXUKwM0IswT7+ywM2sygkWqzDDQPA83jQPMVMC6Qp+5OzrKGbc92x7tWc914gz7D+Y6oh5Mt5rMekjFmw8igieqn3BPkE+iVjfVysKfi6hj5/bn+NleGGL5Bml8h5rtz4DuXAaN/I0w/T5INPGze7N2np/YAao7Tjj0JAAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "constructor",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [],
            "bytecode": "H4sIAAAAAAAA/+XdZZOTZxSH8V0gSd27uLu1ySbZJFVK3alSL6Rk6y1V6qXU3XB390/IuWbCwAt4xb0z3HNl5j9590x+m+yj5z7nZE9Pz7aeM6/e7vuC7nv5wl6VQmyjcI7tVssDtVqn0d+pVCtLy/2tdrNertXbA81Ks1Jv1pf1N6vVTrPWbLTarUa5ValVO5XBeqs62N1wId1nLA+FuxjbKA6Bu3iRu0uxjdIQuEuJ3ef7vV/o5xw5RJ9zWOLvqTeheVQm5mEJzaMzMQ9PaB6TiXlEQvPYTMyFhOZxmZiLCc3jMzGXEponZGIemdA8UWieJDRPFpqnCM1TheZpQvN0oXmG0DxTaJ4lNM8WmucIzXOF5nlC83yh+Sah+WahuSw0V4TmfqG5KjTXhOa60DwgNDeE5qbQ3BKabxGabxWabxOabxea7xCa7xSaFwjNdwnNC4Xmu4Xme4Tme4Xm+4Tm+4XmB4TmB4Xmh4Tmh4XmR4TmR4Xmx4Tmx4XmRULzE0Lzk0LzU0Lz00LzM0Lzs0LzYqH5OaH5eaH5BaH5RaH5JaH5ZaH5FaH5VaF5idC8VGhuC82vCc3LhOaO0DwoNL8uNL8hNL8pNL8lNL8tNL8jNL8rNL8nNL8vNC8Xmj8Qmj8Umj8Smj8Wmj8Rmj8VmlcIzZ8JzZ8LzV8IzV8KzV8JzV8Lzd8Izd8KzSuF5u+E5lVC8/dC8w9C849C809C889C8y9C869C829C8+9C8x9C859C819C899C8z9C879C839C8/9C82qheY3QvFZoXic0rxeaNwjNG4XmTULzZqF5i9C8VWjeJjRvF5p3CM07heZdmZgvSWjenYn50oTmPZmYL0to3puJ+fKE5n2ZmK9IaN6fifnKhOYDmZivSmg+mIn56oTmQ5mYr0loPpyJ+dqE5iOZmK9LaD6aifn6hOZjmZhvSGg+non5xoTmE5mY+xKaTyY093W309s1D4+MiBQixUgpwjUh10hcM3AOzTkl51icc3AM5pjEPpp9Fv/D/Kb5jvvO+ntu6r6PioyOjImMjYyLjI9MiEyMTIpMjkyJTI1Mi0yPzIjMjMyKzI7MicyNzIvMjzDjnpnvfInMBGdGNjOjmaHMTGFm7DYizGBlJikzOplZyQxHZhoy4+/0zDtmoi2MMDOLGVLMVGLGEDN3mEHDTBZmlDCzgxkWzHRgxgE9/xdF6AlPj3R6htNDm57S9FheHKEHLz1p6dFKz1J6eNLTkh6P9DxcEqEnXjtCzzR6iNFTix5T9FyiBxE9eehRQ88WepjQ04MeF/R8WB6hJwBr5Fkzzhpq1hSzxnZFhDWYrElkjR5r1ljDxZom1viw5mVlhDURqyLUzFNDTk01NcbU3FKDSk0mNYrU7FHDRk0XNU7U/FADQ00INRLUDPAMnWfKPGPlmSPP4HgmxTMafhPcw+eeNvd4uee5PcI9Me4Rcc+EewhcU3ONyTUX1yCck3OOyjkb5zAc0znGsc9nH8g+gf+R069TXMw0LzyaAAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "deposit_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "from",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "on_behalf_of",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "deposit_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "on_behalf_of",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "get_asset",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "assetId",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "asset::Asset",
                    "fields": [
                        {
                            "name": "interest_accumulator",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 120
                            }
                        },
                        {
                            "name": "last_updated_ts",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 120
                            }
                        },
                        {
                            "name": "loan_to_value",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 120
                            }
                        },
                        {
                            "name": "oracle_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "H4sIAAAAAAAA/82YT0/bQBDF13Hs/COQEAgECrXaO3JSjj34M7SHnlOR9hIaKXYFHx/W7Igfi0FIGRNGSnY8u5733myS8SYyxgTmwUL4NIllbkw3s2mglyttgmcDOqzJXHT/+u38DtaJxfAzJV6xft1Scm9AWxfa/Fp0zNP99WvQRCxETmu7rjaRro4ZscT8z10GX/Bj8FXiMo3N4/4r5Sz3vqWb85vN0UZNQtTEWg/zLcy1lesVmOffF7kmv7dybWyZa13739HNOdtxnPkdNi/o6SnrsTnkN6YJrB4w+zXs3Y7LFbiXYHSBu1sDruBEDld4CFaINV/d2Ec9/P2ooza0DL5gkUuwZS7sQQaxvlcr9iXuwS/MD5zP/jZ0fliRe4DYnvOHFfeyRgNPS7qZlTUiToZrweqCw/ADcGm/ExfZE8m753HZJu6+Lm75OzoCrnxG91F3wR+Bx4Eyj8DjcQvcA+AeKtfd5hhX6D+EfsEfg8eRLo9S/9jTL7hHwD3WxZ3ZHJMK/cfQL/gT8DjR5VHqn3j6BfcEuKe6uOUz7KcK/afQL/iyrgN/hNiZ88eInXu1s7HPni72GGJI7zhDTM4a54jJWUTy2mftGPdnbkw3s8sanksvqUnstf4dY1Q+A05tf5FnlLxYred/Fz8W86sAtISqjDy202fbb3n32Ji0sggxub+FmOThMerZ3yGZkn4KNRVCQ3cdYQ3XfnHjdzf+fKhhki9XRZIm/+7f58vl6mZxdZFwLk+u/+dFkhfzdZH8Wa+uk+nFHU2vXeMEEgAA",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "get_assets",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [
                {
                    "kind": "array",
                    "length": 2,
                    "type": {
                        "kind": "field"
                    }
                }
            ],
            "bytecode": "H4sIAAAAAAAA/82XzW6DMBCEjcNvSEiaJyF5Au699dB7pEY9Vmr7/mqhjPi6IlElTMlesNfendkBzOKdc5H7sZUbLMLVm/FzP0+xv+mv9URLgR0qZ/KdI+lzFeCsuqq+Fh8W91iO6JlC51A4kfttDcYr1G33FVj38HkT22r3iPVkJCYdwWO8fLEbdLCx1CgxtdTTrNOIOA3mwlobDnNykQ7KGxsuS+JmYXHrNkcOXD0XGXQXfg4eeVgeJ76PrLeYQWdndJYJ69rZsASXa2eD1nP4vIm1Z4Pq4r5NP16N5C7hW/fjzUgsNSpNLfU06zQiToO5sHg2bO6AS/JPXHRPlHdtuCyJuw2L251TFXD1jG6hu/Ar8NiH5XEqDI/Wbr3He3DZheVybHM+hM3Z6XwAf9UqnBLrPKcPgWuLgKm8mpPfX7mWC3Mt4Kvg0/oOPm/qYL+m/Zmbp19N3dBfhcrJ3lJ2652Zs79rv5d6Fj4+397Pr5eny/mFv1SxoehBjWN+MtUuxfDp08wWW/EZfMqTY83KE6x+m9f+P8q+ALWlKch8DgAA",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "get_position",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "Lending::Position",
                    "fields": [
                        {
                            "name": "collateral",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "static_debt",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "debt",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "init",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "oracle_address",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "loan_to_value",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "repay_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "from",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "on_behalf_of",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "repay_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "update_accumulator",
            "functionType": "open",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "withdraw_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "withdraw_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        }
    ],
    "events": [],
    "debug": {
        "debugSymbols": [
            "",
            "",
            "",
            "",
            "eJztnE1u2zAQRu+itVHwZ8ghfZWii6BNgQCBU9TZBb575daiVJnhQBE9ExNa1QWG1Msn+YljEXrrnl++P7w+vRyO3f6ts93+61t3/PVwOP/v+Prw+7Xbq133ePjR/3vadT+fnh+7vT7trqo0WO8vlf3nEFJ1tLlyZ7Qeyp3xRHlEHIqVcWOtP33bdXCX1I6R2oJL1KDcCmqfow7ewGVI8OiK7BDMpRTORx8q3d/Z8aazh5vOHlfPjvFS6uzV7Fqtnd754bS6GP+bfuEloHUWBd1wSYYAvnz92ojDld5/DpMjuBt/67Rhh6/35dNZPy+CB6UTDahJdQ9/PkLWpQuPoEzpCFnvLTyCSyGBBiROALj0xeqLtZkD5ZV2S6CobSqPVs2B8hYUBMqLUxAo71o5IJO3syDQekdXBlrv3cpANVxaFaiGeqsC8ZuaABIwtVcjEOIcSMDUZSABU5eBBExdBLICpi4DCZi6DCRg6jKQgKnLQAKmLgMJmLoMxG5qpyYtojJhDsRuagqI3dQUELupCSBgNzUFxG5qCojd1BQQu6kpIHZTU0DspqaA+E0NZvJ7GMx/jgF+UxNA/KYmgPhNXQZy/KYmgPhNTQDxm5oA4jc1AcRvagKI39QEkICpw3jrgMlDowuQgKnLQAKmLgMJmLoI5AVMXQYSMHUZSMDUZSABU5eBBExdBhIwdRmI39Ru8ozZeTsH4jc1AcRvagKI39RlIOQ3NQHEb2oCiN/UBBC/qQkgflMTQPymJoDYTe0hpM0o3l094kR2U/v+ZpaA/HR70j8gdlN7b80IhFenjN3UqEJKCDXMEwrspkbt02NyNHr+k15gNzUa60egq/VQYDc1Wp3KEa62fAV2UyPY9LwMnZpvigvspkYH4ylzjij3MFxwfrL7UttsrTXDn+qnG1mXb3cM7LeLu0iF/Z61MJW0SRoVEqloHWPqpIzSxOZYUOluDnoy+QdCZL/P3jDE/haQ1hSmV3E5F62CTZmruC5G9tVBmzHyr2lajDHyr8SajJF//dhkjPyr3iZj5F+rNxnjZ+8w7iTGz96S3EmMLfUwgjFuXUyVGLcupkqMWxdTI0attjamTo5bH1Mnx62RqZNjU52MNWnqPkZD5WghPdRToFa9wUE11coI5thULyOYY1PNjGCOTXUzgjk21c4I5thUPyOX4zuvrtpyXJpjU/2MYI5N9TOCOW79TJ0ct36mTo5bP1Mnx62fqZPj1s/UyXHrZ+rk2FQ/g3H8HTdMXn37kVfCfvIGxYVh6zA6SwRDvD/2S/YaGF+Q6idXZJ/rZVC+gyNHZfsVHYc/xujJWe4/n0e5d0aVj9WPyq7pyVHZFSw5KrteI0dlVyeFUafTHwbDGfM=",
            "",
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "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",
            "",
            "eJzNmcFqAjEQht9lz0tJJjObxFcpPUhrQRBbqjfx3at0oysGk0qY/W8qM5tvL99H8NBtvt6X+/XXdtctDp15saZbvB663fdye/5ht1/+7LuFtYMPfbfafpw/e8PHvvtcb1anb8f+bjqIjLMhDtdJFzOz0fv0XENyGT7tvfVnHIuFQ1g4DguHsXAEC2fAwvFYOAELJ0LhEJaVCcvKhGVlwrIyYVmZsKxMWFamBlaO3l6PCAUespKmyZF5/J4ujQaePJfNyN5A4bOxN/D9XOyuQRxmY29QktnYG2RnNvYGjZqNvUHQZmOvqZ+1D4+wNFAads7dHHI/7YTHYRdl8qI0AtX0TxWopoCqQDVZUwWqaZUmENcESBWopiqqQDWpUAWq8b8qUI3UVYHQTM1opmY0UzOaqRnN1IJmakEztaCZWtBMLWimFjRTC5qpBc3UgmZqQTP1oG5qNunmytM77gkoc8sdXLrlerrOCo/w6lZvCa9egJbw6rV4Ej6YDLx6WVrCq1foP/DRpL8doh0y8OrFagmvXreW8OolfBKeOAOvXs2G8B66sJFjgpeQgYcubAkeurAleOjCTuCHjG08dGFL8NiFjZcHG2Mz9NiJLdFjN7ZAH7L0dOkDMd+c8LeULXNpKVvEwlLMlqi0lC1AaSlr3gdLx+MvW+S3wg==",
            "eJzNl01qwzAYRO+itSn6fmTFvkrpwjQpBIJTau+M7t4EHNwQqd4IaXYWzMCzEW/wYi7Xz2E+X8fJ9Iuxb87074uZvofxfp7m4Wc2PTF525jTeLw/s6XQmK/z5XQ7hSaSbvkRFpEtqzaSFqdrWDq3ZYXDR3PjacF4PBjPAYynA+MhiwZEaECMBiRoQIoGhGZpQtM0oXma0ERNaKZmNFMzmqkZzdSMZmpGMzUXN7VaWsPK9gnoNcvUrlnmP/DarfDFrZ4TvvgC5IRPrAVb2eC5K3iPE2tRDUgSa1EPKLEW9YASa1EPKLEW9YASa1EPKLEW9YASC1APKGH1ekBophY0UyuaqRXN1IpmakUztaKZWtFMrWimVjRTK5qpFc3UDs3UDs3UDs3UDs3UrripM/52u+JWzwlffAEywvvol2frHyXV17vmo2+8V4ru0l4puh17pajfd0qHqIP/KYXwCxEvG+g=",
            "",
            "",
            "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",
            "",
            "",
            "eJztnE1u2zAQRu+itVHwZ8ghfZWii6BNgQBBUtTeBb575NaiVJnhQBU9ExNaxQGG1PNn+YljEXrrnl+/PxyfXl8O3f6ts93+61t3+PXwcv7vcHz4fez2atc9vvzo/5523c+n58dur0+7qyoN1vtLZf86hFQdba7cGa2Hcmc8UR4Rh2Jl3FjrT992HdwltWOktuASNSi3gtrnqD1aexniMUCRHYK5lML56EOl+zM73nT2cNPZ4+rZMV5Knb2aXau10zs/fKwuxn+mX3gKaJ1FCWl+Hx2Wz18bcTjT+9dhcgR342+dNuzw9b58OuvnRfCgdKIBBX4Kfz5C1qULj6BM6QhZ7y08gkshgQYkPgBw6YvVF2szB8or7ZZAUdtUHq2aA+UtKAiUF6cgUN61ckAmb2dBoPWOrgy03ruVgWq4tCpQDfVWBeI3NQEkYGqvRiDEOZCAqctAAqYuAwmYughkBUxdBhIwdRlIwNRlIAFTl4EETF0GEjB1GYjd1E5NWkRlwhyI3dQUELupKSB2UxNAwG5qCojd1BQQu6kpIHZTU0DspqaA2E1NAfGbGszk9zCY/xwD/KYmgPhNTQDxm7oM5PhNTQDxm5oA4jc1AcRvagKI39QEEL+pCSABU4fx0gGTm0YXIAFTl4EETF0GEjB1EcgLmLoMJGDqMpCAqctAAqYuAwmYugwkYOoyEL+p3eQes/N2DsRvagKI39QEEL+py0DIb2oCiN/UBBC/qQkgflMTQPymJoD4TU0AsZvaQ0ibUby7usWJ7Kb2/cUsAfnp9qS/QOym9t6aEQivPjJ2U6MKKSHUME8osJsatU+3ydHo+U96gd3UaKwfga7WQ4Hd1Gh1Kke42vIV2E2NYNP9MnRqvikusJsaHYwfmXNEuYe0zXSy+1LbbK01w1v1042sy7c7BvbLxV2kwn7NWphK2iSNColUtI4xdVJGaWJzLKh0NQc9mfw/QmS/zt4wxP4SkNYUpldxORetgk2Zq7guRvbVQZsx8q9pWowx8q/EmoyRf/3YZIz8q94mY+RfqzcZ42fvMO4kxs/ektxJjC31MIIxbl1MlRi3LqZKjFsXUyNGrbY2pk6OWx9TJ8etkamTY1OdjDVp6j5GQ+VoId3UU6BWPcFBNdXKCObYVC8jmGNTzYxgjk11M4I5NtXOCObYVD8jl+MHj67aclyaY1P9jGCOTfUzgjlu/UydHLd+pk6OWz9TJ8etn6mT49bP1Mlx62fq5NhUP4Nx/B03oFsTDP/TG5cF48KwdRidJYIhnh/7JXsOjA9I9ZMzss/1MijfwZGjsv2KjsObMXoSav/6PMp9MKp8rH5Udk1PjsquYMlR2fUaOSq7OimMOp3eARybGsU=",
            ""
        ],
        "fileMap": {
            "1": {
                "source": "mod asset;\nmod interest_math;\nmod helpers;\nmod interfaces;\n\n// Single asset CDP contract.\n// Shoving re-entries up the ass.\n// TODO's:\n// - Use asset address instead of 0. We only use 0, as there is only one collateral asset :shrug:.\n// - Update accumulator should be for specific asset, just abusing only 1 asset atm.\n// - A way to repay all debt at once\n// - Liquidations\ncontract Lending {\n    use dep::safe_math::SafeU120;\n    use dep::std::option::Option;\n    use dep::aztec::{\n        context::{PrivateContext, PublicContext, Context},\n        selector::compute_selector,\n        state_vars::{\n            map::Map,\n            public_state::PublicState,\n        },\n        types::type_serialization::{\n            field_serialization::{FieldSerializationMethods, FIELD_SERIALIZED_LEN},\n            TypeSerializationInterface,\n        },\n    };\n    use crate::asset::{ASSET_SERIALIZED_LEN, Asset, AssetSerializationMethods};\n    use crate::interest_math::compute_multiplier;\n    use crate::helpers::{covered_by_collateral, DebtReturn, debt_updates, debt_value, compute_identifier};\n    use crate::interfaces::{Token, Lending, PriceFeed};\n\n    // Storage structure, containing all storage, and specifying what slots they use.\n    struct Storage {\n        collateral_asset: PublicState<Field, 1>,\n        stable_coin: PublicState<Field, 1>,\n        assets: Map<PublicState<Asset, ASSET_SERIALIZED_LEN>>,\n        collateral: Map<PublicState<Field, FIELD_SERIALIZED_LEN>>,\n        static_debt: Map<PublicState<Field, FIELD_SERIALIZED_LEN>>, // abusing keys very heavily\n    }\n\n    impl Storage {\n        fn init(context: Context) -> pub Self {\n            Storage {\n                collateral_asset: PublicState::new(\n                    context,\n                    1,\n                    FieldSerializationMethods,\n                ),\n                stable_coin: PublicState::new(\n                    context,\n                    2,\n                    FieldSerializationMethods,\n                ),\n                assets: Map::new(\n                    context,\n                    3,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            AssetSerializationMethods,\n                        )\n                    },\n                ),\n                collateral: Map::new(\n                    context,\n                    4,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            FieldSerializationMethods,\n                        )\n                    },\n                ),\n                static_debt: Map::new(\n                    context,\n                    5,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            FieldSerializationMethods,\n                        )\n                    },\n                ),\n            }\n        }\n    }\n\n    struct Position {\n        collateral: Field,\n        static_debt: Field,\n        debt: Field,\n    }\n\n    // Constructs the contract.\n    #[aztec(private)]\n    fn constructor(\n    ) {}\n\n    #[aztec(public)]\n    fn init(oracle_address: Field, loan_to_value: Field, collateral_asset: Field, stable_coin: Field) {\n        let asset_loc = storage.assets.at(0);\n        let asset = asset_loc.read();\n\n        assert(loan_to_value as u120 <= 10000);\n        assert(asset.last_updated_ts == 0);\n        assert(asset.interest_accumulator == 0);\n\n        asset_loc.write(Asset {\n                interest_accumulator: 1000000000,\n                last_updated_ts: context.timestamp() as u120,\n                loan_to_value: loan_to_value as u120,\n                oracle_address\n            });\n\n        storage.collateral_asset.write(collateral_asset);\n        storage.stable_coin.write(stable_coin);\n    }\n\n    // Create a position.\n    #[aztec(public)]\n    fn update_accumulator() -> Asset {\n        let asset_loc = storage.assets.at(0);\n        let mut asset = asset_loc.read();\n\n        let dt: SafeU120 = SafeU120 { value: context.timestamp() as u120 }.sub(SafeU120 { value: asset.last_updated_ts });\n\n        // Only update if time has passed.\n        if (!dt.is_zero()) {\n            let precision: SafeU120 = SafeU120 { value: 1000000000 };\n            let rate_per_second: u120 = 1268391679; // 4% yearly rate / (60 * 60 * 24 * 365)\n            // if rate_per_second < sqrt(WAD) our approx is eq precision + rate * dt\n            let multiplier = compute_multiplier(rate_per_second, dt);\n\n            // accumulator *= multiplier, and multiplier >= 1\n            asset.interest_accumulator = SafeU120{value: asset.interest_accumulator}.mul_div(multiplier, precision).value;\n            asset.last_updated_ts = context.timestamp() as u120;\n\n            asset_loc.write(asset);\n        }\n\n        asset\n    }\n\n    #[aztec(private)]\n    fn deposit_private(from: Field, amount: Field, nonce: Field, secret: Field, on_behalf_of: Field, collateral_asset: Field) {\n        let on_behalf_of = compute_identifier(secret, on_behalf_of, context.msg_sender());\n        let _res = Token::at(collateral_asset).unshield(&mut context, from, context.this_address(), amount, nonce);\n        // _deposit(on_behalf_of, amount, collateral_asset)\n        let selector = compute_selector(\"_deposit(Field,Field,Field)\");\n        context.call_public_function(context.this_address(),\n            selector,\n            [on_behalf_of, amount, collateral_asset]);\n    }\n\n    #[aztec(public)]\n    fn deposit_public(amount: Field, nonce: Field, on_behalf_of: Field, collateral_asset: Field) {\n        Token::at(collateral_asset).transfer_public(context,\n            context.msg_sender(),\n            context.this_address(),\n            amount,\n            nonce);\n        let selector = compute_selector(\"_deposit(Field,Field,Field)\");\n        context.call_public_function(context.this_address(),\n            selector,\n            [on_behalf_of, amount, collateral_asset]);\n    }\n\n    #[aztec(public)]\n    internal fn _deposit(owner: Field, amount: Field, collateral_asset: Field) {\n        let _asset = Lending::at(context.this_address()).update_accumulator(context);\n\n        let coll_asset = storage.collateral_asset.read();\n        assert(coll_asset == collateral_asset);\n\n        let coll_loc = storage.collateral.at(owner);\n        let collateral = coll_loc.read();\n        coll_loc.write(collateral + amount);\n    }\n\n    #[aztec(private)]\n    fn withdraw_private(secret: Field, to: Field, amount: Field) {\n        let on_behalf_of = compute_identifier(secret, 0, context.msg_sender());\n        let selector = compute_selector(\"_withdraw(Field,Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [on_behalf_of, to, amount]);\n    }\n\n    #[aztec(public)]\n    fn withdraw_public(to: Field, amount: Field) {\n        let selector = compute_selector(\"_withdraw(Field,Field,Field)\");\n        context.call_public_function(context.this_address(),\n            selector,\n            [context.msg_sender(), to, amount]);\n    }\n\n    #[aztec(public)]\n    internal fn _withdraw(owner: Field, recipient: Field, amount: Field) {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n        let price = PriceFeed::at(asset.oracle_address).get_price(context);\n\n        let coll_loc = storage.collateral.at(owner);\n        let collateral: Field = coll_loc.read();\n\n        let debt_loc = storage.static_debt.at(owner);\n        let static_debt: Field = debt_loc.read();\n\n        // debt_covered will revert if decrease would leave insufficient collateral to cover debt.\n        // or trying to remove more collateral than available\n        let debt_covered = covered_by_collateral(price,\n            asset.loan_to_value,\n            collateral as u120,\n            0,\n            amount as u120);\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt as u120, 0, 0);\n\n        assert(debt_returns.debt_value < debt_covered);\n\n        coll_loc.write(collateral - amount);\n\n        // @todo @LHerskind Support both shielding and transfers (for now just transfer)\n        let collateral_asset = storage.collateral_asset.read();\n        Token::at(collateral_asset).transfer_public(context, context.this_address(), recipient, amount, 0);\n    }\n\n    #[aztec(private)]\n    fn borrow_private(secret: Field, to: Field, amount: Field) {\n        let on_behalf_of = compute_identifier(secret, 0, context.msg_sender());\n        let selector = compute_selector(\"_borrow(Field,Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [on_behalf_of, to, amount]);\n    }\n\n    #[aztec(public)]\n    fn borrow_public(to: Field, amount: Field) {\n        let selector = compute_selector(\"_borrow(Field,Field,Field)\");\n        context.call_public_function(context.this_address(),\n            selector,\n            [context.msg_sender(), to, amount]);\n    }\n\n    #[aztec(public)]\n    internal fn _borrow(owner: Field, to: Field, amount: Field) {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n        let price = PriceFeed::at(asset.oracle_address).get_price(context);\n\n        // Fetch collateral and static_debt, compute health of current position\n        let collateral = storage.collateral.at(owner).read() as u120;\n        let static_debt = storage.static_debt.at(owner).read() as u120;\n\n        let debt_covered = covered_by_collateral(price, asset.loan_to_value, collateral, 0, 0);\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt, amount as u120, 0);\n\n        assert(debt_returns.debt_value < debt_covered);\n\n        storage.static_debt.at(owner).write(debt_returns.static_debt as Field);\n\n        // @todo @LHerskind Need to support both private and public minting.\n        let stable_coin = storage.stable_coin.read();\n        Token::at(stable_coin).mint_public(context, to, amount);\n    }\n\n    #[aztec(private)]\n    fn repay_private(from: Field, amount: Field, nonce: Field, secret: Field, on_behalf_of: Field, stable_coin: Field) {\n        let on_behalf_of = compute_identifier(secret, on_behalf_of, context.msg_sender());\n        let _res = Token::at(stable_coin).burn(&mut context, from, amount, nonce);\n        let selector = compute_selector(\"_repay(Field,Field,Field)\");\n        context.call_public_function(context.this_address(),\n            selector,\n            [on_behalf_of, amount, stable_coin]);\n    }\n\n    #[aztec(public)]\n    fn repay_public(amount: Field, nonce: Field, owner: Field, stable_coin: Field) {\n        Token::at(stable_coin).burn_public(context, context.msg_sender(), amount, nonce);\n        let selector = compute_selector(\"_repay(Field,Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [owner, amount, stable_coin]);\n    }\n\n    #[aztec(public)]\n    internal fn _repay(owner: Field, amount: Field, stable_coin: Field) {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n\n        // To ensure that private is using the correct token.\n        assert(stable_coin == storage.stable_coin.read());\n\n        let static_debt = storage.static_debt.at(owner).read() as u120;\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt, 0, amount as u120);\n\n        storage.static_debt.at(owner).write(debt_returns.static_debt as Field);\n    }\n\n    unconstrained fn get_asset(assetId: Field) -> Asset {\n        storage.assets.at(assetId).read()\n    }\n\n    unconstrained fn get_position(owner: Field) -> Position {\n        let collateral = storage.collateral.at(owner).read();\n        let static_debt = storage.static_debt.at(owner).read();\n        let asset = storage.assets.at(0).read();\n        let debt = debt_value(static_debt as u120, asset.interest_accumulator as u120) as Field;\n        Position { collateral, static_debt, debt }\n    }\n\n    unconstrained fn get_assets() -> [Field; 2] {\n        [storage.collateral_asset.read(), storage.stable_coin.read()]\n    }\n\n    // TODO: remove this placeholder once https://github.com/AztecProtocol/aztec-packages/issues/2918 is implemented\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, serialized_note: [Field; 0]) -> [Field; 4] {\n        [0, 0, 0, 0]\n    }\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/main.nr"
            },
            "34": {
                "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
                "path": "std/option.nr"
            },
            "76": {
                "source": "global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_COMMITMENTS_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as commitments and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_COMMITMENTS_PER_TX ≥ MAX_NEW_COMMITMENTS_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_PENDING_READ_REQUESTS_PER_CALL: Field = 32;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_OPTIONALLY_REVEALED_DATA_LENGTH_PER_TX: Field = 4;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_PENDING_READ_REQUESTS_PER_TX: Field = 128;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n// TODO(961): Use this constant everywhere instead of hard-coded \"2\".\nglobal KERNELS_PER_BASE_ROLLUP: Field = 2;\nglobal MAX_NEW_NULLIFIERS_PER_BASE_ROLLUP: Field = 128;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_BASE_ROLLUP: Field = 32;\nglobal MAX_PUBLIC_DATA_READS_PER_BASE_ROLLUP: Field = 32;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 254;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 1;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 15;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 7;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 25;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 7;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 13;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue bellow is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 26;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 7;\nglobal BLOCK_HEADER_LENGTH: Field = 7;\nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we\n// should change this constant as well as the offsets in private_call_stack_item.nr\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 155;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 142;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal EMPTY_NULLIFIED_COMMITMENT: Field = 1000000;\nglobal CALL_PRIVATE_FUNCTION_RETURN_SIZE: Field = 161;\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 87;\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 144;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 104;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n",
                "path": "/protocol_types/constants.nr"
            },
            "93": {
                "source": "use dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    BLOCK_HEADER_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__BLOCK_HASH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_header: BlockHeader,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:block-header\nstruct BlockHeader {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    archive_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:block-header\n\nimpl BlockHeader {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; BLOCK_HEADER_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.archive_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn deserialize(deserialized: [Field; BLOCK_HEADER_LENGTH]) -> Self {\n        BlockHeader {\n            note_hash_tree_root: deserialized[0],\n            nullifier_tree_root: deserialized[1],\n            contract_tree_root: deserialized[2],\n            l1_to_l2_messages_tree_root: deserialized[3],\n            archive_root: deserialized[4],\n            public_data_tree_root: deserialized[5],\n            global_variables_hash: deserialized[6],\n        }\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, archive_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n\n    pub fn block_hash(self) -> Field {\n        // TODO(#3442): Unify the ordering in `BlockHeader::serialize` function and the ordering\n        // in the block hash preimage --> This requires changes in the circuits.\n        let inputs = [\n            self.global_variables_hash,\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.public_data_tree_root\n        ];\n        pedersen_hash(inputs, GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_header.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
                "path": "/aztec/abi.nr"
            },
            "95": {
                "source": "use dep::protocol_types::constants::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    BlockHeader,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n    get_block_header::get_block_header,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_header: BlockHeader,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_header: inputs.block_header,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn get_block_header(self, block_number: u32) -> BlockHeader {\n        get_block_header(block_number, self)\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.block_header,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, self.this_address(), self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_header: BlockHeader {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    archive_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_header: BlockHeader::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_header: inputs.block_header,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.inputs.block_header,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, this, self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}\n",
                "path": "/aztec/context.nr"
            },
            "96": {
                "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse dep::protocol_types::constants::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    pedersen_hash_with_separator(inputs, hash_index)\n}\n",
                "path": "/aztec/hash.nr"
            },
            "117": {
                "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
                "path": "/aztec/oracle/arguments.nr"
            },
            "118": {
                "source": "use dep::protocol_types::constants::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(contract_address, function_selector, args_hash)\n}\n",
                "path": "/aztec/oracle/call_private_function.nr"
            },
            "128": {
                "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(contract_address, function_selector, args_hash)\n}\n",
                "path": "/aztec/oracle/enqueue_public_function_call.nr"
            },
            "130": {
                "source": "use dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(contract_address, function_selector, args_hash)\n}\n",
                "path": "/aztec/oracle/public_call.nr"
            },
            "132": {
                "source": "#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(storage_slot: Field, deserialize: fn ([Field; N]) -> T) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n",
                "path": "/aztec/oracle/storage.nr"
            },
            "134": {
                "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse dep::protocol_types::constants::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n",
                "path": "/aztec/private_call_stack_item.nr"
            },
            "135": {
                "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
                "path": "/aztec/public_call_stack_item.nr"
            },
            "136": {
                "source": "use crate::utils::field_from_bytes;\n\nglobal SELECTOR_SIZE = 4;\n\npub fn compute_selector<N>(signature: str<N>) -> Field {\n    let bytes = signature.as_bytes();\n    let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n\n    let mut selector_be_bytes = [0; SELECTOR_SIZE];\n    for i in 0..SELECTOR_SIZE {\n        selector_be_bytes[i] = hash[i];\n    }\n\n    field_from_bytes(selector_be_bytes, true)\n}\n",
                "path": "/aztec/selector.nr"
            },
            "139": {
                "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
                "path": "/aztec/state_vars/map.nr"
            },
            "140": {
                "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
                "path": "/aztec/state_vars/public_state.nr"
            },
            "146": {
                "source": "struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}\n",
                "path": "/aztec/types/vec.nr"
            },
            "149": {
                "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
                "path": "/aztec/types/type_serialization/field_serialization.nr"
            },
            "152": {
                "source": "pub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: Field) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// TODO(#3470): Copied over from https://github.com/AztecProtocol/aztec-packages/blob/a07c4bd47313be6aa604a63f37857eb0136b41ba/yarn-project/noir-protocol-circuits/src/crates/rollup-lib/src/base/base_rollup_inputs.nr#L599\n// move to a shared place?\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(lhs, rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(rhs, lhs)\n}",
                "path": "/aztec/utils.nr"
            },
            "153": {
                "source": "struct SafeU120 {\n    value: u120,\n}\n\nimpl SafeU120 {\n    pub fn min() -> Self {\n        Self {\n            value: 0\n        }\n    }\n\n    pub fn max() -> Self {\n        Self {\n            value: 0xffffffffffffffffffffffffffffff\n        }\n    }\n\n    pub fn new(\n        value: Field,\n    ) -> Self {\n        // Check that it actually will fit. Spending a lot of constraints here :grimacing:\n        let bytes = value.to_be_bytes(32);\n        for i in 0..17 {\n            assert(bytes[i] == 0, \"Value too large for SafeU120\");\n        }\n        Self {\n            value: value as u120\n        }\n    }\n\n    pub fn is_zero(\n        self: Self,\n    ) -> bool {\n        self.value == 0\n    }\n\n    pub fn eq(\n        self: Self,\n        other: Self\n    ) -> bool {\n        self.value == other.value\n    }\n\n    pub fn lt(self: Self, other: Self) -> bool {\n        self.value < other.value\n    }\n\n    pub fn le(self: Self, other: Self) -> bool {\n        self.value <= other.value\n    }\n\n    pub fn gt(self: Self, other: Self) -> bool {\n        self.value > other.value\n    }\n\n    pub fn ge(self: Self, other: Self) -> bool {\n        self.value >= other.value\n    }\n\n    pub fn sub(\n      self: Self,\n      b: Self,\n    ) -> Self {\n        assert(self.value >= b.value, \"Underflow\");\n        Self {\n            value: self.value - b.value\n        }\n    }\n\n    pub fn add(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value + b.value;\n        assert(c >= self.value, \"Overflow\");\n        Self {\n            value: c\n        }\n    }\n\n    pub fn mul(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value * b.value;\n        if !b.is_zero() {\n            assert(c / b.value == self.value, \"Overflow\");\n        }\n        Self {\n            value: c\n        }\n    }\n\n    pub fn div(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        assert(!b.is_zero(), \"Divide by zero\");\n        Self {\n            value: self.value / b.value\n        }\n    }\n\n    pub fn mul_div(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        self.mul(b).div(divisor)\n    }\n\n    pub fn mul_div_up(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        let c = self.mul(b);\n        assert(!divisor.is_zero(), \"Divide by zero\");\n        let adder = ((self.value * b.value % divisor.value) as u120 > 0) as u120;\n        c.div(divisor).add(Self {value: adder})\n    }\n\n    // todo: implement mul_div with 240 bit intermediate values.\n}\n\n#[test]\nfn test_init() {\n    let a = SafeU120::new(1);\n    assert(a.value == 1);\n}\n\n#[test]\nfn test_init_max() {\n    let a = SafeU120::max();\n    assert(a.value == 0xffffffffffffffffffffffffffffff);\n}\n\n#[test]\nfn test_init_min() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n}\n\n#[test]\nfn test_is_zero() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n    assert(a.is_zero() == true);\n}\n\n#[test]\nfn test_eq() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(1);\n    assert(a.eq(b));\n}\n\n#[test]\nfn test_lt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(a.lt(b));\n    assert(b.lt(a) == false);\n}\n\n#[test]\nfn test_le() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.le(b));\n    assert(a.le(c));\n    assert(c.le(a) == false);\n}\n\n#[test]\nfn test_gt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(b.gt(a));\n    assert(a.gt(b) == false);\n}\n\n#[test]\nfn test_ge() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.ge(b));\n    assert(a.ge(c) == false);\n    assert(c.ge(a));\n}\n\n#[test(should_fail)]\nfn test_init_too_large() {\n    let b = SafeU120::max().value as Field + 1; // max + 1\n    let _a = SafeU120::new(b);\n}\n\n#[test]\nfn test_add() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let c = SafeU120::add(a, b);\n    assert(c.value == 3);\n}\n\n#[test(should_fail)]\nfn test_add_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(1);\n    let _c = SafeU120::add(a, b);\n}\n\n#[test]\nfn test_sub() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(1);\n    let c = SafeU120::sub(a, b);\n    assert(c.value == 1);\n}\n\n#[test(should_fail)]\nfn test_sub_underflow() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let _c = SafeU120::sub(a, b);\n}\n\n#[test]\nfn test_mul() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(3);\n    let c = SafeU120::mul(a, b);\n    assert(c.value == 6);\n}\n\n#[test(should_fail)]\nfn test_mul_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let _c = SafeU120::mul(a, b);\n}\n\n#[test]\nfn test_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::div(a, b);\n    assert(c.value == 2);\n}\n\n#[test(should_fail)]\nfn test_div_by_zero() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(0);\n    let _c = SafeU120::div(a, b);\n}\n\n#[test]\nfn test_mul_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div(a, b, c);\n    assert(d.value == 9);\n}\n\n#[test(should_fail)]\nfn test_mul_div_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test(should_fail)]\nfn test_mul_div_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(4);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test]\nfn test_mul_div_up_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(5);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 4);\n}\n\n#[test]\nfn test_mul_div_up_non_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 9);\n}\n\n#[test(should_fail)]\nfn test_mul_div_up_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(9);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n\n// It should not be possible for us to overflow `mul_div_up` through the adder, since that require the divisor to be 1\n// since we otherwise would not be at the max value. If divisor is 1, adder is 0.\n#[test(should_fail)]\nfn test_mul_div_up_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n",
                "path": "/safe_math/safe_u120.nr"
            },
            "154": {
                "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\n\n// Struct to be used to represent \"totals\". Generally, there should be one per asset.\n// It stores the global values that are shared among all users, such as an accumulator\n// and last time it was updated.\n// In practice, it should also point to an oracle and have more fields related to\n// loan to value ratios and other things, but we did not have enough reads/writes for this.\nstruct Asset {\n    interest_accumulator: u120,\n    last_updated_ts: u120,\n    loan_to_value: u120,\n    oracle_address: Field,\n}\n\nglobal ASSET_SERIALIZED_LEN: Field = 4;\n\n// Right now we are wasting so many writes. If changing last_updated_ts\n// we will end up rewriting all of them, wasting writes.\nfn deserializeAsset(fields: [Field; ASSET_SERIALIZED_LEN]) -> Asset {\n    Asset {\n        interest_accumulator: fields[0] as u120,\n        last_updated_ts: fields[1] as u120,\n        loan_to_value: fields[2] as u120,\n        oracle_address: fields[3]\n    }\n}\n\nfn serializeAsset(asset: Asset) -> [Field; ASSET_SERIALIZED_LEN] {\n    [\n        asset.interest_accumulator as Field,\n        asset.last_updated_ts as Field,\n        asset.loan_to_value as Field,\n        asset.oracle_address\n    ]\n}\n\nimpl Asset {\n    pub fn serialize(self: Self) -> [Field; ASSET_SERIALIZED_LEN] {\n        serializeAsset(self)\n    }\n}\n\nglobal AssetSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeAsset,\n    serialize: serializeAsset,\n};\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/asset.nr"
            },
            "155": {
                "source": "use dep::safe_math::SafeU120;\n\n// Binomial approximation of exponential\n// using lower than desired precisions for everything due to u120 limit\n// (1+x)^n = 1+n*x+[n/2*(n-1)]*x^2+[n/6*(n-1)*(n-2)*x^3]...\n// we are loosing around almost 8 digits of precision from yearly -> daily interest\n// dividing with 31536000 (seconds per year).\n// rate must be measured with higher precision than 10^9.\n// we use e18, and rates >= 4% yearly. Otherwise need more precision\npub fn compute_multiplier(rate_per_second: u120, dt: SafeU120) -> SafeU120 {\n    let base = SafeU120 { value: 1000000000 }; // 1e9\n    let WAD = SafeU120 { value: 1000000000000000000 }; // 1e18\n    let diff = WAD.div(base);\n    let mut res = base;\n    if (!dt.is_zero()) {\n        let exp_minus_one = SafeU120 { value: dt.value - 1 };\n        let exp_minus_two = SafeU120 { value: if (dt.value > 2) { dt.value - 2 } else { 0 } };\n\n        // if rate_per_second < sqrt(WAD), then base_power_two and base_power_three = 0\n        let rate = SafeU120 { value: rate_per_second };\n        let base_power_two = rate.mul_div(rate, WAD);\n        let base_power_three = base_power_two.mul_div(rate, WAD);\n\n        let temp = dt.mul(exp_minus_one);\n        let second_term = temp.mul(base_power_two).div(SafeU120 { value: 2 });\n        let third_term = temp.mul(exp_minus_two).mul(base_power_three).div(SafeU120 { value: 6 });\n\n        // throwing away precision to keep us under u120 :sob:\n        let offset = dt.mul(rate).add(second_term).add(third_term).div(diff);\n\n        res = base.add(offset);\n    }\n    res\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/interest_math.nr"
            },
            "156": {
                "source": "use crate::interest_math::compute_multiplier;\nuse dep::safe_math::SafeU120;\nuse dep::aztec::hash::pedersen_hash;\n\n// Utility used to easily get a \"id\" for a private user that sits in the same\n// \"space\" as the public users.\n// It help us to have a single mapping for collateral that have both public and private users.\npub fn compute_identifier(secret: Field, on_behalf_of: Field, self: Field) -> Field {\n    // EITHER secret OR on_behalf_of MUST be set. But not both\n    assert(!((secret == 0) as bool & (on_behalf_of == 0) as bool));\n    if (secret != 0) {\n        pedersen_hash([self, secret], 0)\n    } else {\n        on_behalf_of\n    }\n}\n\npub fn covered_by_collateral(price: u120, loan_to_value: u120, collateral: u120, increase: u120, decrease: u120) -> u120 {\n    let price_precision = SafeU120 { value: 1000000000 };\n    let ltv_precision = SafeU120 { value: 10000 };\n\n    let price = SafeU120 { value: price };\n    let collateral = SafeU120 { value: collateral }.add(SafeU120 { value: increase }).sub(SafeU120 { value: decrease });\n    let loan_to_value = SafeU120 { value: loan_to_value };\n\n    let collateral_value = collateral.mul_div(price, price_precision);\n    let debt_covered = collateral_value.mul_div(loan_to_value, ltv_precision);\n\n    debt_covered.value\n}\n\nstruct DebtReturn {\n    debt_value: u120,\n    static_debt: u120,\n}\n\npub fn debt_updates(interest_accumulator: u120, static_debt: u120, increase: u120, decrease: u120) -> DebtReturn {\n    assert(interest_accumulator > 0);\n    let accumulator_precision = SafeU120 { value: 1000000000 };\n\n    let static_debt = SafeU120 { value: static_debt };\n    let interest_accumulator = SafeU120 { value: interest_accumulator };\n    let increase = SafeU120 { value: increase };\n    let decrease = SafeU120 { value: decrease };\n\n    let current_debt_value = static_debt.mul_div(interest_accumulator, accumulator_precision);\n    let new_debt_value = current_debt_value.add(increase).sub(decrease);\n\n    // static_debt_increase = amount / accumulator\n    // rounding up new debt.\n    let static_debt_increase = increase.mul_div_up(accumulator_precision, interest_accumulator);\n    // rounding down repayment.\n    let static_debt_decrease = decrease.mul_div(accumulator_precision, interest_accumulator);\n\n    // We need to allow repaying of the entire debt as well etc. This is very prone to failing\n    // if you try to repay exact due to time diff between sim and execution.\n    let new_static_debt = static_debt.add(static_debt_increase).sub(static_debt_decrease);\n\n    DebtReturn { debt_value: new_debt_value.value, static_debt: new_static_debt.value }\n}\n\npub fn debt_value(static_debt: u120, interest_accumulator: u120) -> u120 {\n    let static_debt = SafeU120 { value: static_debt };\n    let accumulator_precision = SafeU120 { value: 1000000000 };\n    let interest_accumulator = SafeU120 { value: interest_accumulator };\n    static_debt.mul_div_up(interest_accumulator, accumulator_precision).value\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/helpers.nr"
            },
            "157": {
                "source": "use dep::aztec::context::{\n    PrivateContext,\n    PublicContext\n};\n\nuse crate::asset::Asset;\nuse dep::protocol_types::constants::RETURN_VALUES_LENGTH;\nuse dep::aztec::selector::compute_selector;\n\nstruct PriceFeed {\n  address: Field,\n}\n\nimpl PriceFeed {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn get_price(self: Self, context: PublicContext) -> u120 {\n    let return_values = context.call_public_function(\n      self.address, \n      compute_selector(\"get_price(Field)\"),\n      [0]\n    );\n\n    return_values[0] as u120\n  }\n}\n\nstruct Token {\n  address: Field,\n}\n\nimpl Token {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn transfer_public(self: Self, context: PublicContext, from: Field, to: Field, amount: Field, nonce: Field) {\n    context.call_public_function(\n      self.address,\n      compute_selector(\"transfer_public((Field),(Field),Field,Field)\"),\n      [from, to, amount, nonce]\n    );\n  }\n\n  pub fn mint_public(self: Self, context: PublicContext, to: Field, amount: Field) {\n    context.call_public_function(\n      self.address,\n      compute_selector(\"mint_public((Field),Field)\"),\n      [to, amount]\n    );\n  }\n\n  pub fn burn_public(self: Self, context: PublicContext, from: Field, amount: Field, nonce: Field) {\n    context.call_public_function(\n      self.address,\n      compute_selector(\"burn_public((Field),Field,Field)\"),\n      [from, amount, nonce]\n    );\n  }\n\n  // Private\n  pub fn unshield(self: Self, context: &mut PrivateContext, from: Field, to: Field, amount: Field, nonce: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    context.call_private_function(\n      self.address,\n      compute_selector(\"unshield((Field),(Field),Field,Field)\"),\n      [from, to, amount, nonce]\n    )\n  }\n\n  pub fn burn(self: Self, context: &mut PrivateContext, from: Field, amount: Field, nonce: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    context.call_private_function(\n      self.address,\n      compute_selector(\"burn((Field),Field,Field)\"),\n      [from, amount, nonce]\n    )\n  }\n}\n\nstruct Lending {\n  address: Field,\n}\n\nimpl Lending {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn update_accumulator(self: Self, context: PublicContext) -> Asset {\n    let return_values = context.call_public_function_no_args(\n      self.address,\n      compute_selector(\"update_accumulator()\"),\n    );\n\n    Asset {\n      interest_accumulator: return_values[0] as u120,\n      last_updated_ts: return_values[1] as u120,\n      loan_to_value: return_values[2] as u120,\n      oracle_address: return_values[3],\n    }\n  }\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/interfaces.nr"
            }
        }
    }
}
