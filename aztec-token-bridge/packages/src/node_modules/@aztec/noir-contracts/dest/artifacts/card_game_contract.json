{
    "name": "CardGame",
    "functions": [
        {
            "name": "buy_pack",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "claim_cards",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "cards_fields",
                    "type": {
                        "kind": "array",
                        "length": 4,
                        "type": {
                            "kind": "field"
                        }
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "compute_note_hash_and_nullifier",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "contract_address",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "storage_slot",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "serialized_note",
                    "type": {
                        "kind": "array",
                        "length": 3,
                        "type": {
                            "kind": "field"
                        }
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "array",
                    "length": 4,
                    "type": {
                        "kind": "field"
                    }
                }
            ],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "constructor",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [],
            "bytecode": "H4sIAAAAAAAA/+XdZZOTZxSH8V0gSd27uLu1ySbZJFVK3alSL6Rk6y1V6qXU3XB390/IuWbCwAt4xb0z3HNl5j9590x+m+yj5z7nZE9Pz7aeM6/e7vuC7nv5wl6VQmyjcI7tVssDtVqn0d+pVCtLy/2tdrNertXbA81Ks1Jv1pf1N6vVTrPWbLTarUa5ValVO5XBeqs62N1wId1nLA+FuxjbKA6Bu3iRu0uxjdIQuEuJ3ef7vV/o5xw5RJ9zWOLvqTeheVQm5mEJzaMzMQ9PaB6TiXlEQvPYTMyFhOZxmZiLCc3jMzGXEponZGIemdA8UWieJDRPFpqnCM1TheZpQvN0oXmG0DxTaJ4lNM8WmucIzXOF5nlC83yh+Sah+WahuSw0V4TmfqG5KjTXhOa60DwgNDeE5qbQ3BKabxGabxWabxOabxea7xCa7xSaFwjNdwnNC4Xmu4Xme4Tme4Xm+4Tm+4XmB4TmB4Xmh4Tmh4XmR4TmR4Xmx4Tmx4XmRULzE0Lzk0LzU0Lz00LzM0Lzs0LzYqH5OaH5eaH5BaH5RaH5JaH5ZaH5FaH5VaF5idC8VGhuC82vCc3LhOaO0DwoNL8uNL8hNL8pNL8lNL8tNL8jNL8rNL8nNL8vNC8Xmj8Qmj8Umj8Smj8Wmj8Rmj8VmlcIzZ8JzZ8LzV8IzV8KzV8JzV8Lzd8Izd8KzSuF5u+E5lVC8/dC8w9C849C809C889C8y9C869C829C8+9C8x9C859C819C899C8z9C879C839C8/9C82qheY3QvFZoXic0rxeaNwjNG4XmTULzZqF5i9C8VWjeJjRvF5p3CM07heZdmZgvSWjenYn50oTmPZmYL0to3puJ+fKE5n2ZmK9IaN6fifnKhOYDmZivSmg+mIn56oTmQ5mYr0loPpyJ+dqE5iOZmK9LaD6aifn6hOZjmZhvSGg+non5xoTmE5mY+xKaTyY093W309s1D4+MiBQixUgpwjUh10hcM3AOzTkl51icc3AM5pjEPpp9Fv/D/Kb5jvvO+ntu6r6PioyOjImMjYyLjI9MiEyMTIpMjkyJTI1Mi0yPzIjMjMyKzI7MicyNzIvMjzDjnpnvfInMBGdGNjOjmaHMTGFm7DYizGBlJikzOplZyQxHZhoy4+/0zDtmoi2MMDOLGVLMVGLGEDN3mEHDTBZmlDCzgxkWzHRgxgE9/xdF6AlPj3R6htNDm57S9FheHKEHLz1p6dFKz1J6eNLTkh6P9DxcEqEnXjtCzzR6iNFTix5T9FyiBxE9eehRQ88WepjQ04MeF/R8WB6hJwBr5Fkzzhpq1hSzxnZFhDWYrElkjR5r1ljDxZom1viw5mVlhDURqyLUzFNDTk01NcbU3FKDSk0mNYrU7FHDRk0XNU7U/FADQ00INRLUDPAMnWfKPGPlmSPP4HgmxTMafhPcw+eeNvd4uee5PcI9Me4Rcc+EewhcU3ONyTUX1yCck3OOyjkb5zAc0znGsc9nH8g+gf+R069TXMw0LzyaAAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "join_game",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "cards_fields",
                    "type": {
                        "kind": "array",
                        "length": 2,
                        "type": {
                            "kind": "field"
                        }
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "on_card_played",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "player",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "card_as_field",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "on_cards_claimed",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "player",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "cards_hash",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "on_game_joined",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "player",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "deck_strength",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "play_card",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "card",
                    "type": {
                        "kind": "struct",
                        "path": "cards::Card",
                        "fields": [
                            {
                                "name": "strength",
                                "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 16
                                }
                            },
                            {
                                "name": "points",
                                "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 16
                                }
                            }
                        ]
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "start_game",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_header",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::BlockHeader",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "archive_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "view_collection_cards",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "offset",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "array",
                    "length": 10,
                    "type": {
                        "kind": "struct",
                        "path": "std::option::Option",
                        "fields": [
                            {
                                "name": "_is_some",
                                "type": {
                                    "kind": "boolean"
                                }
                            },
                            {
                                "name": "_value",
                                "type": {
                                    "kind": "struct",
                                    "path": "cards::Card",
                                    "fields": [
                                        {
                                            "name": "strength",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 16
                                            }
                                        },
                                        {
                                            "name": "points",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 16
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "view_game",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "game::Game",
                    "fields": [
                        {
                            "name": "players",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "struct",
                                    "path": "game::PlayerEntry",
                                    "fields": [
                                        {
                                            "name": "address",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "deck_strength",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 32
                                            }
                                        },
                                        {
                                            "name": "points",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 120
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "rounds_cards",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "struct",
                                    "path": "cards::Card",
                                    "fields": [
                                        {
                                            "name": "strength",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 16
                                            }
                                        },
                                        {
                                            "name": "points",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 16
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "started",
                            "type": {
                                "kind": "boolean"
                            }
                        },
                        {
                            "name": "finished",
                            "type": {
                                "kind": "boolean"
                            }
                        },
                        {
                            "name": "claimed",
                            "type": {
                                "kind": "boolean"
                            }
                        },
                        {
                            "name": "current_player",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                            }
                        },
                        {
                            "name": "current_round",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                            }
                        }
                    ]
                }
            ],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "view_game_cards",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "game",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "player",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "offset",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "array",
                    "length": 10,
                    "type": {
                        "kind": "struct",
                        "path": "std::option::Option",
                        "fields": [
                            {
                                "name": "_is_some",
                                "type": {
                                    "kind": "boolean"
                                }
                            },
                            {
                                "name": "_value",
                                "type": {
                                    "kind": "struct",
                                    "path": "cards::Card",
                                    "fields": [
                                        {
                                            "name": "strength",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 16
                                            }
                                        },
                                        {
                                            "name": "points",
                                            "type": {
                                                "kind": "integer",
                                                "sign": "unsigned",
                                                "width": 16
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            ],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        }
    ],
    "events": [],
    "debug": {
        "debugSymbols": [
            "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",
            "",
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "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",
            ""
        ],
        "fileMap": {
            "1": {
                "source": "mod cards;\nmod game;\n\ncontract CardGame {\n    use dep::protocol_types::constants::MAX_NOTES_PER_PAGE;\n    use dep::aztec::{\n        context::Context,\n        hash::pedersen_hash,\n        state_vars::{\n            map::Map,\n            public_state::PublicState,\n        },\n    };\n\n    use dep::std::option::Option;\n    use dep::value_note::{\n        balance_utils,\n        value_note::{\n            ValueNoteMethods,\n            VALUE_NOTE_LEN,\n        },\n    };\n\n    use dep::aztec::{\n        abi,\n        abi::{\n            Hasher, PrivateContextInputs,\n        },\n        note::{\n            note_header::NoteHeader,\n            utils as note_utils,\n        },\n        selector::compute_selector\n    };\n\n    use crate::cards::{\n        PACK_CARDS,\n        Deck, \n        Card,\n        get_pack_cards,\n        compute_deck_strength,\n    };\n    use crate::game::{\n        NUMBER_OF_PLAYERS,\n        NUMBER_OF_CARDS_DECK,\n        PLAYABLE_CARDS,\n        PlayerEntry,\n        Game,\n        GameSerializationMethods,\n        GAME_SERIALIZED_LEN\n    };\n\n    struct Storage {\n        collections: Map<Deck>,\n        game_decks: Map<Map<Deck>>,\n        games: Map<PublicState<Game, GAME_SERIALIZED_LEN>>,\n    }\n\n    impl Storage {\n        fn init(\n            context: Context,\n        ) -> pub Self {\n            Storage {\n                collections: Map::new(\n                    context,\n                    1,\n                    |context, slot| {\n                        Deck::new(\n                            context,\n                            slot,\n                        )\n                    },\n                ),\n                game_decks: Map::new(\n                    context,\n                    2,\n                    |context, slot| {\n                        Map::new(\n                            context,\n                            slot,\n                            |context, slot|{\n                                Deck::new(\n                                    context,\n                                    slot,\n                                )\n                            }\n                        )\n                    },\n                ),\n                games: Map::new(\n                    context,\n                    3,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            GameSerializationMethods,\n                        )\n                    },\n                )\n            }\n        }\n    }\n\n    #[aztec(private)]\n    fn constructor() {}\n\n    #[aztec(private)]\n    fn buy_pack(seed: Field // The randomness used to generate the cards. Passed in for now.\n    ) {\n        let buyer = context.msg_sender();\n        let mut cards = get_pack_cards(seed, buyer);\n\n        let mut collection = storage.collections.at(buyer);\n        let _inserted_cards = collection.add_cards(cards, buyer);\n    }\n\n    #[aztec(private)]\n    fn join_game(game: u32, cards_fields: [Field; 2]) {\n        let cards = cards_fields.map(|card_field| Card::from_field(card_field));\n\n        let player = context.msg_sender();\n\n        let mut collection = storage.collections.at(player);\n        collection.remove_cards(cards, player);\n        let mut game_deck = storage.game_decks.at(game as Field).at(player);\n        let _added_to_game_deck = game_deck.add_cards(cards, player);\n        let selector = compute_selector(\"on_game_joined(u32,Field,u32)\");\n        let strength = compute_deck_strength(cards);\n        context.call_public_function(context.this_address(),\n            selector,\n            [game as Field, player, strength]);\n    }\n\n    #[aztec(public)]\n    internal fn on_game_joined(game: u32, player: Field, deck_strength: u32) {\n        let game_storage = storage.games.at(game as Field);\n\n        let mut game_data = game_storage.read();\n        assert(game_data.add_player(PlayerEntry { address: player, deck_strength, points: 0 }), \"Game full\");\n\n        game_storage.write(game_data);\n    }\n\n    #[aztec(public)]\n    fn start_game(game: u32) {\n        let game_storage = storage.games.at(game as Field);\n\n        let mut game_data = game_storage.read();\n        game_data.start_game();\n        game_storage.write(game_data);\n    }\n\n    #[aztec(private)]\n    fn play_card(game: u32, card: Card) {\n        let player = context.msg_sender();\n\n        let mut game_deck = storage.game_decks.at(game as Field).at(player);\n        game_deck.remove_cards([card], player);\n\n        let selector = compute_selector(\"on_card_played(u32,Field,Field)\");\n        // docs:start:call_public_function\n        context.call_public_function(context.this_address(),\n            selector,\n            [game as Field, player, card.to_field()]);\n        // docs:end:call_public_function\n    }\n\n    #[aztec(public)]\n    internal fn on_card_played(game: u32, player: Field, card_as_field: Field) {\n        let game_storage = storage.games.at(game as Field);\n\n        let mut game_data = game_storage.read();\n\n        let card = Card::from_field(card_as_field);\n        let current_player = game_data.current_player();\n        assert(current_player.address == player, \"Not your turn\");\n        game_data.play_card(card);\n\n        game_storage.write(game_data);\n    }\n\n    #[aztec(private)]\n    fn claim_cards(game: u32, cards_fields: [Field; PLAYABLE_CARDS]) {\n        let player = context.msg_sender();\n        let cards = cards_fields.map(|card_field| Card::from_field(card_field));\n\n        let mut collection = storage.collections.at(player);\n        let _inserted_cards = collection.add_cards(cards, player);\n\n        let selector = compute_selector(\"on_cards_claimed(u32,Field,Field)\");\n        context.call_public_function(context.this_address(),\n            selector,\n            [game as Field, player, pedersen_hash(cards_fields, 0)]);\n    }\n\n    #[aztec(public)]\n    internal fn on_cards_claimed(game: u32, player: Field, cards_hash: Field) {\n        let game_storage = storage.games.at(game as Field);\n        let mut game_data = game_storage.read();\n\n        assert(!game_data.claimed, \"Already claimed\");\n        game_data.claimed = true;\n\n        assert_eq(cards_hash, pedersen_hash(game_data.rounds_cards.map(|card: Card| card.to_field()), 0));\n\n        let winner = game_data.winner();\n        assert_eq(player, winner.address, \"Not the winner\");\n\n        game_storage.write(game_data);\n    }\n\n    unconstrained fn view_collection_cards(owner: Field, offset: u32) -> [Option<Card>; MAX_NOTES_PER_PAGE] {\n        let collection = storage.collections.at(owner);\n\n        collection.view_cards(offset)\n    }\n\n    unconstrained fn view_game_cards(game: u32, player: Field, offset: u32) -> [Option<Card>; MAX_NOTES_PER_PAGE] {\n        let game_deck = storage.game_decks.at(game as Field).at(player);\n\n        game_deck.view_cards(offset)\n    }\n\n    unconstrained fn view_game(game: u32) -> Game {\n        storage.games.at(game as Field).read()\n    }\n\n    // Computes note hash and nullifier.\n    // Note 1: Needs to be defined by every contract producing logs.\n    // Note 2: Having it in all the contracts gives us the ability to compute the note hash and nullifier differently for different kind of notes.\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, serialized_note: [Field; VALUE_NOTE_LEN]) -> [Field; 4] {\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n        note_utils::compute_note_hash_and_nullifier(ValueNoteMethods, note_header, serialized_note)\n    }\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/card_game_contract/src/main.nr"
            },
            "11": {
                "source": "\n// TODO: Once we fully move to the new SSA pass this module can be removed and replaced\n// by the methods in the `slice` module\nimpl<T, N> [T; N] {\n    #[builtin(array_len)]\n    pub fn len(_self: Self) -> Field {}\n\n    #[builtin(arraysort)]\n    pub fn sort(_self: Self) -> Self {}\n\n    // Sort with a custom sorting function.\n    pub fn sort_via<Env>(mut a: Self, ordering: fn[Env](T, T) -> bool) -> Self { \n        for i in 1 .. a.len() {\n            for j in 0..i {\n                if ordering(a[i], a[j]) {\n                    let old_a_j = a[j];\n                    a[j] = a[i];\n                    a[i] = old_a_j;\n                }\n            }\n        }\n        a\n    }\n\n    // Converts an array into a slice.\n    pub fn as_slice(self) -> [T] {\n        let mut slice = [];\n        for elem in self {\n            slice = slice.push_back(elem);\n        }\n        slice\n    }\n\n    // Apply a function to each element of an array, returning a new array\n    // containing the mapped elements.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> [U; N] {\n        let first_elem = f(self[0]);\n        let mut ret = [first_elem; N];\n\n        for i in 1 .. self.len() {\n            ret[i] = f(self[i]);\n        }\n\n        ret\n    }\n\n    // Apply a function to each element of the array and an accumulator value,\n    // returning the final accumulated value. This function is also sometimes\n    // called `foldl`, `fold_left`, `reduce`, or `inject`.\n    pub fn fold<U, Env>(self, mut accumulator: U, f: fn[Env](U, T) -> U) -> U {\n        for elem in self {\n            accumulator = f(accumulator, elem);\n        }\n        accumulator\n    }\n\n    // Apply a function to each element of the array and an accumulator value,\n    // returning the final accumulated value. Unlike fold, reduce uses the first\n    // element of the given array as its starting accumulator value.\n    pub fn reduce<Env>(self, f: fn[Env](T, T) -> T) -> T {\n        let mut accumulator = self[0];\n        for i in 1 .. self.len() {\n            accumulator = f(accumulator, self[i]);\n        }\n        accumulator\n    }\n\n    // Returns true if all elements in the array satisfy the predicate\n    pub fn all<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = true;\n        for elem in self {\n            ret &= predicate(elem);\n        }\n        ret\n    }\n\n    // Returns true if any element in the array satisfies the predicate\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        for elem in self {\n            ret |= predicate(elem);\n        }\n        ret\n    }\n}\n",
                "path": "std/array.nr"
            },
            "18": {
                "source": "struct GrumpkinScalar {\n    low: Field,\n    high: Field,\n}\n\nimpl GrumpkinScalar {\n    pub fn new(low: Field, high: Field) -> Self {\n        // TODO: check that the low and high value fit within the grumpkin modulus\n        GrumpkinScalar { low, high }\n    }\n}\n\nglobal GRUMPKIN_SCALAR_SERIALIZED_LEN: Field = 2;\n\npub fn deserialize_grumpkin_scalar(fields: [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN]) -> GrumpkinScalar {\n    GrumpkinScalar { low: fields[0], high: fields[1] }\n}\n\npub fn serialize_grumpkin_scalar(scalar: GrumpkinScalar) -> [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN] {\n    [scalar.low, scalar.high]\n}\n",
                "path": "std/grumpkin_scalar.nr"
            },
            "19": {
                "source": "use crate::grumpkin_scalar::GrumpkinScalar;\nuse crate::scalar_mul::fixed_base_embedded_curve;\n\npub fn grumpkin_fixed_base(scalar: GrumpkinScalar) -> [Field; 2] {\n    // TODO: this should use both the low and high limbs to do the scalar multiplication\n    fixed_base_embedded_curve(scalar.low, scalar.high)\n}\n",
                "path": "std/grumpkin_scalar_mul.nr"
            },
            "23": {
                "source": "impl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n    \n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(_self: Self, _bit_size: u32) -> [u1] {}\n    \n    #[builtin(to_be_bits)]\n    fn __to_be_bits(_self: Self, _bit_size: u32) -> [u1] {}\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n    \n    #[builtin(to_be_radix)]\n    fn __to_be_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n// Convert a 32 byte array to a field element\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n",
                "path": "std/field.nr"
            },
            "34": {
                "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
                "path": "std/option.nr"
            },
            "76": {
                "source": "global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_COMMITMENTS_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as commitments and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_COMMITMENTS_PER_TX ≥ MAX_NEW_COMMITMENTS_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_PENDING_READ_REQUESTS_PER_CALL: Field = 32;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_OPTIONALLY_REVEALED_DATA_LENGTH_PER_TX: Field = 4;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_PENDING_READ_REQUESTS_PER_TX: Field = 128;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n// TODO(961): Use this constant everywhere instead of hard-coded \"2\".\nglobal KERNELS_PER_BASE_ROLLUP: Field = 2;\nglobal MAX_NEW_NULLIFIERS_PER_BASE_ROLLUP: Field = 128;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_BASE_ROLLUP: Field = 32;\nglobal MAX_PUBLIC_DATA_READS_PER_BASE_ROLLUP: Field = 32;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 254;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 1;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 15;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 7;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 25;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 7;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 13;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue bellow is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 26;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 7;\nglobal BLOCK_HEADER_LENGTH: Field = 7;\nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we\n// should change this constant as well as the offsets in private_call_stack_item.nr\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 155;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 142;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal EMPTY_NULLIFIED_COMMITMENT: Field = 1000000;\nglobal CALL_PRIVATE_FUNCTION_RETURN_SIZE: Field = 161;\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 87;\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 144;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 104;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n",
                "path": "/protocol_types/constants.nr"
            },
            "93": {
                "source": "use dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    BLOCK_HEADER_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__BLOCK_HASH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_header: BlockHeader,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:block-header\nstruct BlockHeader {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    archive_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:block-header\n\nimpl BlockHeader {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; BLOCK_HEADER_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.archive_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn deserialize(deserialized: [Field; BLOCK_HEADER_LENGTH]) -> Self {\n        BlockHeader {\n            note_hash_tree_root: deserialized[0],\n            nullifier_tree_root: deserialized[1],\n            contract_tree_root: deserialized[2],\n            l1_to_l2_messages_tree_root: deserialized[3],\n            archive_root: deserialized[4],\n            public_data_tree_root: deserialized[5],\n            global_variables_hash: deserialized[6],\n        }\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, archive_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n\n    pub fn block_hash(self) -> Field {\n        // TODO(#3442): Unify the ordering in `BlockHeader::serialize` function and the ordering\n        // in the block hash preimage --> This requires changes in the circuits.\n        let inputs = [\n            self.global_variables_hash,\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.public_data_tree_root\n        ];\n        pedersen_hash(inputs, GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_header.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
                "path": "/aztec/abi.nr"
            },
            "94": {
                "source": "use dep::protocol_types::constants::GENERATOR_INDEX__CONTRACT_ADDRESS;\nuse crate::hash::pedersen_hash;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n    pedersen_hash([pub_key_x, pub_key_y, partial_address],\n        GENERATOR_INDEX__CONTRACT_ADDRESS)\n}\n",
                "path": "/aztec/address.nr"
            },
            "95": {
                "source": "use dep::protocol_types::constants::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    BlockHeader,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n    get_block_header::get_block_header,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_header: BlockHeader,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_header: inputs.block_header,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn get_block_header(self, block_number: u32) -> BlockHeader {\n        get_block_header(block_number, self)\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.block_header,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, self.this_address(), self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_header: BlockHeader {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    archive_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_header: BlockHeader::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_header: inputs.block_header,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.inputs.block_header,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, this, self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}\n",
                "path": "/aztec/context.nr"
            },
            "96": {
                "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse dep::protocol_types::constants::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    pedersen_hash_with_separator(inputs, hash_index)\n}\n",
                "path": "/aztec/hash.nr"
            },
            "103": {
                "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse crate::types::point::Point;\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n",
                "path": "/aztec/log.nr"
            },
            "108": {
                "source": "use crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse dep::protocol_types::constants::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n    broadcast: bool\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let serialized_note = serialize(*note);\n    assert(notify_created_note(storage_slot, serialized_note, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        let broadcast = note_interface.broadcast;\n        broadcast(context, storage_slot, *note);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(context: &mut PrivateContext, note: Note, note_interface: NoteInterface<Note, N>) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}\n",
                "path": "/aztec/note/lifecycle.nr"
            },
            "109": {
                "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(context: PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>, note: Note) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(fields: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(context: &mut PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    }\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields)[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields);\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>, options: NoteViewerOptions<Note, N>) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields)\n}\n\nunconstrained fn flatten_options<Note, N>(selects: BoundedVec<Option<Select>, N>, sorts: BoundedVec<Option<Sort>, N>) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}\n",
                "path": "/aztec/note/note_getter.nr"
            },
            "111": {
                "source": "use crate::hash::pedersen_hash;\nuse dep::protocol_types::constants::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([storage_slot, note_hash], 0)\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)\n}\n",
                "path": "/aztec/note/note_hash.nr"
            },
            "115": {
                "source": "use dep::protocol_types::constants::GENERATOR_INDEX__OUTER_NULLIFIER;\nuse crate::{\n    note::{\n        note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n    },\n    utils::arr_copy_slice,\n    hash::pedersen_hash,\n};\n\npub fn compute_inner_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note_with_header);\n\n    let input = [header.contract_address, inner_nullifier];\n    pedersen_hash(input, GENERATOR_INDEX__OUTER_NULLIFIER)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(note_interface: NoteInterface<Note, N>, note_header: NoteHeader, serialized_note: [Field; S]) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(serialized_note, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
                "path": "/aztec/note/utils.nr"
            },
            "117": {
                "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
                "path": "/aztec/oracle/arguments.nr"
            },
            "124": {
                "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: Field) -> [Field; 3] {\n    get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n    let result = get_public_key_and_partial_address_internal(address);\n    let pub_key_x = result[0];\n    let pub_key_y = result[1];\n    let partial_address = result[2];\n\n    let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n    assert(calculated_address == address);\n\n    Point::new(pub_key_x, pub_key_y)\n}\n",
                "path": "/aztec/oracle/get_public_key.nr"
            },
            "125": {
                "source": "use crate::oracle::get_public_key::get_public_key;\nuse crate::types::point::Point;\n\n#[oracle(getSecretKey)]\nfn get_secret_key_oracle(_owner: Point) -> [Field; dep::std::grumpkin_scalar::GRUMPKIN_SCALAR_SERIALIZED_LEN] {}\n\nunconstrained fn get_secret_key_internal(owner_public_key: Point) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    dep::std::grumpkin_scalar::deserialize_grumpkin_scalar(get_secret_key_oracle(owner_public_key))\n}\n\npub fn get_secret_key(owner: Field) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    let owner_public_key = get_public_key(owner);\n    let secret = get_secret_key_internal(owner_public_key);\n\n    // Constrain the owner - Nullifier secret key is currently just the encryption private key so we can constrain\n    // the owner by deriving the public key from the secret key and checking the result.\n    let computed_public_key = dep::std::grumpkin_scalar_mul::grumpkin_fixed_base(secret);\n    assert(owner_public_key.x == computed_public_key[0]);\n    assert(owner_public_key.y == computed_public_key[1]);\n\n    secret\n}\n",
                "path": "/aztec/oracle/get_secret_key.nr"
            },
            "127": {
                "source": "#[oracle(getRandomField)]\nfn rand_oracle() -> Field {}\n\nunconstrained pub fn rand() -> Field {\n    rand_oracle()\n}\n",
                "path": "/aztec/oracle/rand.nr"
            },
            "128": {
                "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(contract_address, function_selector, args_hash)\n}\n",
                "path": "/aztec/oracle/enqueue_public_function_call.nr"
            },
            "131": {
                "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(_storage_slot: Field, _serialized_note: [Field; N], _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(storage_slot: Field, serialized_note: [Field; N], inner_note_hash: Field) -> Field {\n    notify_created_note_oracle(storage_slot, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(nullifier: Field, inner_note_hash: Field) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        return_size,\n        placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS] // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(serialized_note);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n",
                "path": "/aztec/oracle/notes.nr"
            },
            "132": {
                "source": "#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(storage_slot: Field, deserialize: fn ([Field; N]) -> T) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n",
                "path": "/aztec/oracle/storage.nr"
            },
            "133": {
                "source": "use crate::types::point::Point;\nuse dep::protocol_types::constants::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(_contract_address: Field, _storage_slot: Field, _encryption_pub_key: Point, _preimage: [Field; N]) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(contract_address: Field, storage_slot: Field, encryption_pub_key: Point, preimage: [Field; N]) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(contract_address, storage_slot, encryption_pub_key, preimage), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: Field, _event_selector: Field, _message: T) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(contract_address: Field, event_selector: Field, message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}\n",
                "path": "/aztec/oracle/logs.nr"
            },
            "135": {
                "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
                "path": "/aztec/public_call_stack_item.nr"
            },
            "139": {
                "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
                "path": "/aztec/state_vars/map.nr"
            },
            "140": {
                "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
                "path": "/aztec/state_vars/public_state.nr"
            },
            "141": {
                "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse dep::protocol_types::constants::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes},\n    note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\n\n// docs:start:struct\nstruct Set<Note, N> {\n    context: Context,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n}\n// docs:end:struct\n\nimpl<Note, N> Set<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set {\n            context,\n            storage_slot,\n            note_interface,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:insert\n    pub fn insert(self,\n        note: &mut Note,\n        broadcast: bool,\n    ) {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(\n            self.context.public.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert_from_public\n    \n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // docs:start:remove\n    pub fn remove(self, note: Note) {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_read_or_nullify(self.note_interface, note);\n        let has_been_read = context.read_requests.any(|r| r == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(\n            context,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(\n            self.context.private.unwrap(),\n            storage_slot,\n            self.note_interface,\n            options,\n        );\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>,\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n        view_notes(self.storage_slot, self.note_interface, options)\n    }\n    // docs:end:view_notes\n}\n",
                "path": "/aztec/state_vars/set.nr"
            },
            "146": {
                "source": "struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}\n",
                "path": "/aztec/types/vec.nr"
            },
            "152": {
                "source": "pub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: Field) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// TODO(#3470): Copied over from https://github.com/AztecProtocol/aztec-packages/blob/a07c4bd47313be6aa604a63f37857eb0136b41ba/yarn-project/noir-protocol-circuits/src/crates/rollup-lib/src/base/base_rollup_inputs.nr#L599\n// move to a shared place?\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(lhs, rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(rhs, lhs)\n}",
                "path": "/aztec/utils.nr"
            },
            "156": {
                "source": "use dep::aztec::{\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        rand::rand,\n        get_secret_key::get_secret_key,\n        get_public_key::get_public_key,\n    },\n    log::emit_encrypted_log,\n    hash::pedersen_hash,\n    context::PrivateContext,\n};\n\nglobal VALUE_NOTE_LEN: Field = 3; // 3 plus a header.\n\n// docs:start:value-note-def\nstruct ValueNote {\n    value: Field,\n    owner: Field,\n    randomness: Field,\n    header: NoteHeader,\n}\n// docs:end:value-note-def\n\nimpl ValueNote {\n    pub fn new(value: Field, owner: Field) -> Self {\n        let randomness = rand();\n        let header = NoteHeader::empty();\n        ValueNote {\n            value,\n            owner,\n            randomness,\n            header,\n        }\n    }\n\n    pub fn serialize(self) -> [Field; VALUE_NOTE_LEN] {\n        [self.value, self.owner, self.randomness]\n    }\n\n    pub fn deserialize(serialized_note: [Field; VALUE_NOTE_LEN]) -> Self {\n        ValueNote {\n            value: serialized_note[0],\n            owner: serialized_note[1],\n            randomness: serialized_note[2],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    pub fn compute_note_hash(self) -> Field {\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash(self.serialize(),0)\n    }\n\n    // docs:start:nullifier\n\n    pub fn compute_nullifier(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(ValueNoteMethods, self);\n        let secret = get_secret_key(self.owner);\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash([\n            note_hash_for_nullify,\n            secret.low,\n            secret.high,\n        ],0)\n    }\n\n    // docs:end:nullifier\n\n    pub fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    // Broadcasts the note as an encrypted log on L1.\n    pub fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\nfn deserialize(serialized_note: [Field; VALUE_NOTE_LEN]) -> ValueNote {\n    ValueNote::deserialize(serialized_note)\n}\n\nfn serialize(note: ValueNote) -> [Field; VALUE_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: ValueNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: ValueNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: ValueNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut ValueNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\n// Broadcasts the note as an encrypted log on L1.\nfn broadcast(context: &mut PrivateContext, slot: Field, note: ValueNote) {\n    note.broadcast(context, slot);\n}\n\nglobal ValueNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};\n",
                "path": "/value_note/value_note.nr"
            },
            "157": {
                "source": "use dep::protocol_types::constants::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse dep::aztec::{\n    context::{PrivateContext, PublicContext, Context},\n    note::{\n        note_getter_options::NoteGetterOptions,\n        note_viewer_options::NoteViewerOptions,\n        note_getter::view_notes,\n    },\n    oracle::get_secret_key::get_secret_key,\n    state_vars::set::Set,\n    types::point::Point,\n};\nuse dep::std;\nuse dep::std::{\n    option::Option,\n};\nuse dep::value_note::{\n    value_note::{ValueNote, ValueNoteMethods, VALUE_NOTE_LEN},\n};\n\nstruct Card {\n    strength: u16,\n    points: u16,\n}\n\nimpl Card {\n    pub fn from_field(field: Field) -> Card {\n        let value_bytes = field.to_le_bytes(32);\n        let strength = (value_bytes[0] as u16) + (value_bytes[1] as u16) * 256;\n        let points = (value_bytes[2] as u16) + (value_bytes[3] as u16) * 256;\n        Card {\n            strength,\n            points,\n        }\n    }\n\n    pub fn to_field(self) -> Field {\n        self.strength as Field + (self.points as Field)*65536\n    }\n\n    pub fn serialize(self) -> [Field; 2] {\n        [self.strength as Field, self.points as Field]\n    }\n}\n\n#[test]\nfn test_to_from_field() {\n    let field = 1234567890;\n    let card = Card::from_field(field);\n    assert(card.to_field() == field);\n}\n\nstruct CardNote {\n    card: Card,\n    note: ValueNote,\n}\n\nimpl CardNote {\n    fn new(\n        strength: u16,\n        points: u16,\n        owner: Field,\n    ) -> Self {\n        let card = Card {\n            strength,\n            points,\n        };\n        CardNote::from_card(card, owner)\n    }\n\n    pub fn from_card(card: Card, owner: Field) -> CardNote {\n        CardNote {\n            card,\n            note: ValueNote::new(card.to_field(), owner),\n        }\n    }\n\n    pub fn from_note(note: ValueNote) -> CardNote {\n        CardNote {\n            card: Card::from_field(note.value),\n            note,\n        }\n    }\n}\n\nstruct Deck {\n    set: Set<ValueNote, VALUE_NOTE_LEN>,\n}\n\npub fn filter_cards<N>(notes: [Option<ValueNote>; MAX_READ_REQUESTS_PER_CALL], desired_cards: [Card; N]) -> [Option<ValueNote>; MAX_READ_REQUESTS_PER_CALL] {\n    let mut selected = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n\n    let mut found = [false; N];\n\n    for i in 0..notes.len() {\n        let note = notes[i];\n        if note.is_some() {\n            let card_note = CardNote::from_note(note.unwrap_unchecked());\n            for j in 0..N {\n                if !found[j]\n                    & (card_note.card.strength == desired_cards[j].strength)\n                    & (card_note.card.points == desired_cards[j].points) {\n                    selected[i] = note;\n                    found[j] = true;\n                }\n            }\n        }\n    }\n\n    selected\n}\n\nimpl Deck {\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n    ) -> Self {\n        let set = Set {\n            context,\n            storage_slot,\n            note_interface: ValueNoteMethods,\n        };\n        Deck {\n            set\n        }\n    }\n\n    pub fn add_cards<N>(&mut self, cards: [Card; N], owner: Field) -> [CardNote]{\n        let context = self.set.context.private.unwrap();\n\n        let mut inserted_cards = [];\n        for card in cards {\n            let mut card_note = CardNote::from_card(card, owner);\n            self.set.insert(&mut card_note.note, true);\n            inserted_cards = inserted_cards.push_back(card_note);\n        }\n\n        inserted_cards\n    }\n\n    pub fn get_cards<N>(&mut self, cards: [Card; N], owner: Field) -> [CardNote; N] {\n        let options = NoteGetterOptions::with_filter(filter_cards, cards);\n        let maybe_notes = self.set.get_notes(options);\n        let mut found_cards = [Option::none(); N];\n        for i in 0..maybe_notes.len() {\n            if maybe_notes[i].is_some() {\n                let card_note = CardNote::from_note(\n                    maybe_notes[i].unwrap_unchecked()\n                );\n                // Ensure the notes are actually owned by the owner (to prevent user from generating a valid proof while\n                // spending someone else's notes).\n                assert(card_note.note.owner == owner);\n\n                for j in 0..cards.len() {\n                    if found_cards[j].is_none() & (cards[j].strength == card_note.card.strength) & (cards[j].points == card_note.card.points) {\n                        found_cards[j] = Option::some(card_note);\n                    }\n                }\n            }\n        }\n\n        found_cards.map(|card_note: Option<CardNote>| {\n            assert(card_note.is_some(), \"Card not found\");\n            card_note.unwrap_unchecked()\n        })\n    }\n\n    pub fn remove_cards<N>(&mut self, cards: [Card; N], owner: Field) {\n        let card_notes = self.get_cards(cards, owner);\n        for card_note in card_notes {\n            self.set.remove(card_note.note);\n        }\n    }\n\n    unconstrained pub fn view_cards(self, offset: u32) -> [Option<Card>; MAX_NOTES_PER_PAGE] {\n        let options = NoteViewerOptions::new().set_offset(offset);\n        let opt_notes = self.set.view_notes(options);\n        let mut opt_cards = [Option::none(); MAX_NOTES_PER_PAGE];\n        \n        for i in 0..opt_notes.len() {\n            opt_cards[i] = opt_notes[i].map(|note: ValueNote| Card::from_field(note.value));\n        }\n\n        opt_cards\n    }\n\n}\n\nglobal PACK_CARDS = 3; // Limited by number of write requests (max 4)\n\npub fn get_pack_cards(seed: Field, owner_address: Field) -> [Card; PACK_CARDS] {\n    // generate pseudo randomness deterministically from 'seed' and user secret\n    let secret = get_secret_key(owner_address);\n    let mix = secret.high + secret.low + seed;\n    let random_bytes = std::hash::sha256(mix.to_le_bytes(32));\n\n    let mut cards = [Card::from_field(0); PACK_CARDS];\n    // we generate PACK_CARDS cards\n    assert((PACK_CARDS as u64) < 8, \"Cannot generate more than 8 cards\");\n    for i in 0..PACK_CARDS {\n        let strength = (random_bytes[i] as u16) + (random_bytes[i + 1] as u16) * 256;\n        let points = (random_bytes[i + 2] as u16) + (random_bytes[i + 3] as u16) * 256;\n        cards[i] = Card {\n            strength, points\n        };\n    }\n\n    cards\n}\n\npub fn compute_deck_strength<N>(cards: [Card; N]) -> Field {\n    cards.fold(0,\n        |acc, card: Card| {\n        acc + card.strength as Field\n    })\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/card_game_contract/src/cards.nr"
            },
            "158": {
                "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\nuse crate::cards::Card;\n\nglobal NUMBER_OF_PLAYERS = 2;\nglobal NUMBER_OF_CARDS_DECK = 2;\n\nstruct PlayerEntry {\n    address: Field,\n    deck_strength: u32,\n    points: u120,\n}\n\nimpl PlayerEntry {\n    pub fn is_initialized(self) -> bool {\n        self.address != 0\n    }\n}\n\nglobal PLAYABLE_CARDS = 4;\n\nstruct Game {\n    players: [PlayerEntry; NUMBER_OF_PLAYERS],\n    rounds_cards: [Card; PLAYABLE_CARDS],\n    started: bool,\n    finished: bool,\n    claimed: bool,\n    current_player: u32,\n    current_round: u32,\n}\n\nglobal GAME_SERIALIZED_LEN: Field = 15;\n\nfn deserializeGame(fields: [Field; GAME_SERIALIZED_LEN]) -> Game {\n    let players = [\n        PlayerEntry { address: fields[0], deck_strength: fields[1] as u32, points: fields[2] as u120 },\n        PlayerEntry { address: fields[3], deck_strength: fields[4] as u32, points: fields[5] as u120 }\n    ];\n    let rounds_cards = [\n        Card::from_field(fields[6]), Card::from_field(fields[7]),\n        Card::from_field(fields[8]), Card::from_field(fields[9])\n    ];\n    Game {\n        players,\n        rounds_cards,\n        started: fields[10] as bool,\n        finished: fields[11] as bool,\n        claimed: fields[12] as bool,\n        current_player: fields[13] as u32,\n        current_round: fields[14] as u32\n    }\n}\n\nfn serializeGame(game: Game) -> [Field; GAME_SERIALIZED_LEN] {\n    [\n        game.players[0].address,\n        game.players[0].deck_strength as Field,\n        game.players[0].points as Field,\n        game.players[1].address,\n        game.players[1].deck_strength as Field,\n        game.players[1].points as Field,\n        game.rounds_cards[0].to_field(),\n        game.rounds_cards[1].to_field(),\n        game.rounds_cards[2].to_field(),\n        game.rounds_cards[3].to_field(),\n        game.started as Field,\n        game.finished as Field,\n        game.claimed as Field,\n        game.current_player as Field,\n        game.current_round as Field\n    ]\n}\n\nimpl Game {\n    pub fn serialize(self: Self) -> [Field; GAME_SERIALIZED_LEN] {\n        serializeGame(self)\n    }\n\n    pub fn add_player(&mut self, player_entry: PlayerEntry) -> bool {\n        let mut added = false;\n\n        for i in 0..NUMBER_OF_PLAYERS {\n            let entry = self.players[i];\n            if entry.is_initialized() {\n                assert(entry.address != player_entry.address, \"Player already in game\");\n            } else if !added {\n                self.players[i] = player_entry;\n                added = true;\n            }\n        }\n\n        added\n    }\n\n    pub fn start_game(&mut self) {\n        assert(!self.started, \"Game already started\");\n        for i in 0..NUMBER_OF_PLAYERS {\n            let entry = self.players[i];\n            assert(entry.is_initialized(), \"Game not full\");\n        }\n        let sorted_by_deck_strength = self.players.sort_via(|a: PlayerEntry, b: PlayerEntry| a.deck_strength < b.deck_strength);\n        self.players = sorted_by_deck_strength;\n        self.started = true;\n    }\n\n    pub fn current_player(self) -> PlayerEntry {\n        assert(self.started, \"Game not started\");\n        assert(!self.finished, \"Game finished\");\n        self.players[self.current_player]\n    }\n\n    pub fn winner(self) -> PlayerEntry {\n        assert(self.finished, \"Game not finished\");\n        let mut winner = self.players[0];\n        for i in 1..NUMBER_OF_PLAYERS {\n            let entry = self.players[i];\n            if entry.points > winner.points {\n                winner = entry;\n            }\n        }\n        winner\n    }\n\n    pub fn play_card(&mut self, card: Card) {\n        assert(self.started, \"Game not started\");\n        assert(!self.finished, \"Game finished\");\n\n        let round_offset = self.current_round * NUMBER_OF_PLAYERS;\n\n        self.rounds_cards[round_offset + self.current_player] = card;\n        self.current_player = (self.current_player + 1) % NUMBER_OF_PLAYERS;\n\n        if self.current_player == 0 {\n            self._finish_round();\n        }\n    }\n\n    fn _finish_round(&mut self) {\n        let round_offset = self.current_round * NUMBER_OF_PLAYERS;\n        self.current_round += 1;\n\n        let mut winner_index = 0;\n        let mut winner_strength = 0;\n        let mut round_points = 0;\n\n        for i in 0..NUMBER_OF_PLAYERS {\n            let card = self.rounds_cards[round_offset + i];\n            round_points += (card.points as u120);\n            if card.strength > winner_strength {\n                winner_strength = card.strength;\n                winner_index = i;\n            }\n        }\n\n        self.players[winner_index].points += round_points;\n        if self.current_round == NUMBER_OF_CARDS_DECK {\n            self.finished = true;\n        }\n    }\n}\n\nglobal GameSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeGame,\n    serialize: serializeGame,\n};\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/card_game_contract/src/game.nr"
            }
        }
    }
}
