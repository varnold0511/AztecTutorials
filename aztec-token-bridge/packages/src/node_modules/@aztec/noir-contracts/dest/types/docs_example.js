/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, EthAddress, Point, } from '@aztec/aztec.js';
import DocsExampleContractArtifactJson from '../artifacts/docs_example_contract.json' assert { type: 'json' };
export const DocsExampleContractArtifact = DocsExampleContractArtifactJson;
/**
 * Type-safe interface for contract DocsExample;
 */
export class DocsExampleContract extends ContractBase {
    constructor(completeAddress, wallet, portalContract = EthAddress.ZERO) {
        super(completeAddress, DocsExampleContractArtifact, wallet, portalContract);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, DocsExampleContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, min_points, max_points, legendary_card_secret) {
        return new DeployMethod(Point.ZERO, wallet, DocsExampleContractArtifact, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(publicKey, wallet, min_points, max_points, legendary_card_secret) {
        return new DeployMethod(publicKey, wallet, DocsExampleContractArtifact, Array.from(arguments).slice(2));
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return DocsExampleContractArtifact;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jc19leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3R5cGVzL2RvY3NfZXhhbXBsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFFdEMsb0JBQW9CO0FBQ3BCLE9BQU8sRUFJTCxRQUFRLEVBRVIsWUFBWSxFQUdaLFlBQVksRUFDWixVQUFVLEVBSVYsS0FBSyxHQUdOLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTywrQkFBK0IsTUFBTSx5Q0FBeUMsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUU5RyxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRywrQkFBbUQsQ0FBQztBQUUvRjs7R0FFRztBQUNILE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxZQUFZO0lBQ25ELFlBQW9CLGVBQWdDLEVBQUUsTUFBYyxFQUFFLGNBQWMsR0FBRyxVQUFVLENBQUMsSUFBSTtRQUNwRyxLQUFLLENBQUMsZUFBZSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxjQUFjLENBQUMsQ0FBQztJQUM5RSxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFxQixFQUFFLE1BQWM7UUFDMUQsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFpQyxDQUFDO0lBQ3BHLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxNQUFNLENBQ2xCLE1BQWMsRUFDZCxVQUEyQixFQUMzQixVQUEyQixFQUMzQixxQkFBZ0M7UUFFaEMsT0FBTyxJQUFJLFlBQVksQ0FDckIsS0FBSyxDQUFDLElBQUksRUFDVixNQUFNLEVBQ04sMkJBQTJCLEVBQzNCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLG1CQUFtQixDQUMvQixTQUFvQixFQUNwQixNQUFjLEVBQ2QsVUFBMkIsRUFDM0IsVUFBMkIsRUFDM0IscUJBQWdDO1FBRWhDLE9BQU8sSUFBSSxZQUFZLENBQ3JCLFNBQVMsRUFDVCxNQUFNLEVBQ04sMkJBQTJCLEVBQzNCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLFFBQVE7UUFDeEIsT0FBTywyQkFBMkIsQ0FBQztJQUNyQyxDQUFDO0NBc0RGIn0=