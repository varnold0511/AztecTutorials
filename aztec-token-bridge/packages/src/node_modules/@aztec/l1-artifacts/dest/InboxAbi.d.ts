/**
 * Inbox ABI.
 */
export declare const InboxAbi: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_registry";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "actor";
        readonly type: "bytes32";
    }];
    readonly name: "Inbox__ActorTooLarge";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "content";
        readonly type: "bytes32";
    }];
    readonly name: "Inbox__ContentTooLarge";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Inbox__DeadlineBeforeNow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Inbox__FailedToWithdrawFees";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Inbox__FeeTooHigh";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "entryKey";
        readonly type: "bytes32";
    }, {
        readonly internalType: "uint64";
        readonly name: "storedFee";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "feePassed";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint32";
        readonly name: "storedVersion";
        readonly type: "uint32";
    }, {
        readonly internalType: "uint32";
        readonly name: "versionPassed";
        readonly type: "uint32";
    }, {
        readonly internalType: "uint32";
        readonly name: "storedDeadline";
        readonly type: "uint32";
    }, {
        readonly internalType: "uint32";
        readonly name: "deadlinePassed";
        readonly type: "uint32";
    }];
    readonly name: "Inbox__IncompatibleEntryArguments";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "entry";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "rollup";
        readonly type: "uint256";
    }];
    readonly name: "Inbox__InvalidVersion";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Inbox__NotPastDeadline";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "entryKey";
        readonly type: "bytes32";
    }];
    readonly name: "Inbox__NothingToConsume";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Inbox__PastDeadline";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "secretHash";
        readonly type: "bytes32";
    }];
    readonly name: "Inbox__SecretHashTooLarge";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Inbox__Unauthorized";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "bytes32";
        readonly name: "entryKey";
        readonly type: "bytes32";
    }];
    readonly name: "L1ToL2MessageCancelled";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "bytes32";
        readonly name: "entryKey";
        readonly type: "bytes32";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "bytes32";
        readonly name: "recipient";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "senderChainId";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "recipientVersion";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint32";
        readonly name: "deadline";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "fee";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "content";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "secretHash";
        readonly type: "bytes32";
    }];
    readonly name: "MessageAdded";
    readonly type: "event";
}, {
    readonly inputs: readonly [];
    readonly name: "REGISTRY";
    readonly outputs: readonly [{
        readonly internalType: "contract IRegistry";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32[]";
        readonly name: "_entryKeys";
        readonly type: "bytes32[]";
    }, {
        readonly internalType: "address";
        readonly name: "_feeCollector";
        readonly type: "address";
    }];
    readonly name: "batchConsume";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "actor";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "chainId";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DataStructures.L1Actor";
            readonly name: "sender";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "actor";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "version";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DataStructures.L2Actor";
            readonly name: "recipient";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "content";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "secretHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "deadline";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint64";
            readonly name: "fee";
            readonly type: "uint64";
        }];
        readonly internalType: "struct DataStructures.L1ToL2Msg";
        readonly name: "_message";
        readonly type: "tuple";
    }, {
        readonly internalType: "address";
        readonly name: "_feeCollector";
        readonly type: "address";
    }];
    readonly name: "cancelL2Message";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "entryKey";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "actor";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "chainId";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DataStructures.L1Actor";
            readonly name: "sender";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "actor";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "version";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DataStructures.L2Actor";
            readonly name: "recipient";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "content";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "secretHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "deadline";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint64";
            readonly name: "fee";
            readonly type: "uint64";
        }];
        readonly internalType: "struct DataStructures.L1ToL2Msg";
        readonly name: "_message";
        readonly type: "tuple";
    }];
    readonly name: "computeEntryKey";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "_entryKey";
        readonly type: "bytes32";
    }];
    readonly name: "contains";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "feesAccrued";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "balance";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "_entryKey";
        readonly type: "bytes32";
    }];
    readonly name: "get";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint64";
            readonly name: "fee";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint32";
            readonly name: "count";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "version";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "deadline";
            readonly type: "uint32";
        }];
        readonly internalType: "struct DataStructures.Entry";
        readonly name: "";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "bytes32";
            readonly name: "actor";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly internalType: "struct DataStructures.L2Actor";
        readonly name: "_recipient";
        readonly type: "tuple";
    }, {
        readonly internalType: "uint32";
        readonly name: "_deadline";
        readonly type: "uint32";
    }, {
        readonly internalType: "bytes32";
        readonly name: "_content";
        readonly type: "bytes32";
    }, {
        readonly internalType: "bytes32";
        readonly name: "_secretHash";
        readonly type: "bytes32";
    }];
    readonly name: "sendL2Message";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "withdrawFees";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];
//# sourceMappingURL=InboxAbi.d.ts.map