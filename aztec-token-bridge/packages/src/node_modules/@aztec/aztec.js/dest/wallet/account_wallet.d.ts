/// <reference types="node" resolution-mode="require"/>
import { Fr, GrumpkinPrivateKey } from '@aztec/circuits.js';
import { AuthWitness, FunctionCall, PXE, TxExecutionRequest } from '@aztec/types';
import { AccountInterface } from '../account/interface.js';
import { ContractFunctionInteraction } from '../index.js';
import { BaseWallet } from './base_wallet.js';
/**
 * A wallet implementation that forwards authentication requests to a provided account.
 */
export declare class AccountWallet extends BaseWallet {
    protected account: AccountInterface;
    constructor(pxe: PXE, account: AccountInterface);
    createTxExecutionRequest(execs: FunctionCall[]): Promise<TxExecutionRequest>;
    createAuthWitness(message: Fr | Buffer): Promise<AuthWitness>;
    /**
     * Returns a function interaction to set a message hash as authorized in this account.
     * Public calls can then consume this authorization.
     * @param message - Message hash to authorize.
     * @param authorized - True to authorize, false to revoke authorization.
     * @returns - A function interaction.
     */
    setPublicAuth(message: Fr | Buffer, authorized: boolean): ContractFunctionInteraction;
    /** Returns the complete address of the account that implements this wallet. */
    getCompleteAddress(): import("@aztec/circuits.js").CompleteAddress;
    /** Returns the address of the account that implements this wallet. */
    getAddress(): import("@aztec/circuits.js").AztecAddress;
    private getSetIsValidStorageAbi;
}
/**
 * Extends {@link AccountWallet} with the encryption private key. Not required for
 * implementing the wallet interface but useful for testing purposes or exporting
 * an account to another pxe.
 */
export declare class AccountWalletWithPrivateKey extends AccountWallet {
    private encryptionPrivateKey;
    constructor(pxe: PXE, account: AccountInterface, encryptionPrivateKey: GrumpkinPrivateKey);
    /** Returns the encryption private key associated with this account. */
    getEncryptionPrivateKey(): import("@aztec/circuits.js").Fq;
}
//# sourceMappingURL=account_wallet.d.ts.map