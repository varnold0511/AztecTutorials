import { EthAddress } from '@aztec/foundation/eth-address';
import { DebugLogger } from '@aztec/foundation/log';
import type { Abi, Narrow } from 'abitype';
import { Account, Chain, Hex, HttpTransport, PublicClient, WalletClient } from 'viem';
import { HDAccount, PrivateKeyAccount } from 'viem/accounts';
import { L1ContractAddresses } from './l1_contract_addresses.js';
/**
 * Return type of the deployL1Contract function.
 */
export type DeployL1Contracts = {
    /**
     * Wallet Client Type.
     */
    walletClient: WalletClient<HttpTransport, Chain, Account>;
    /**
     * Public Client Type.
     */
    publicClient: PublicClient<HttpTransport, Chain>;
    /**
     * The currently deployed l1 contract addresses
     */
    l1ContractAddresses: L1ContractAddresses;
};
/**
 * Contract artifacts
 */
export interface ContractArtifacts {
    /**
     * The contract abi.
     */
    contractAbi: Narrow<Abi | readonly unknown[]>;
    /**
     * The contract bytecode
     */
    contractBytecode: Hex;
}
/**
 * All L1 Contract Artifacts for deployment
 */
export interface L1ContractArtifactsForDeployment {
    /**
     * Contract deployment emitter artifacts
     */
    contractDeploymentEmitter: ContractArtifacts;
    /**
     * Decoder contract artifacts
     */
    decoderHelper?: ContractArtifacts;
    /**
     * Inbox contract artifacts
     */
    inbox: ContractArtifacts;
    /**
     * Outbox contract artifacts
     */
    outbox: ContractArtifacts;
    /**
     * Registry contract artifacts
     */
    registry: ContractArtifacts;
    /**
     * Rollup contract artifacts
     */
    rollup: ContractArtifacts;
}
/**
 * Deploys the aztec L1 contracts; Rollup, Contract Deployment Emitter & (optionally) Decoder Helper.
 * @param rpcUrl - URL of the ETH RPC to use for deployment.
 * @param account - Private Key or HD Account that will deploy the contracts.
 * @param chain - The chain instance to deploy to.
 * @param logger - A logger object.
 * @param contractsToDeploy - The set of L1 artifacts to be deployed
 * @returns A list of ETH addresses of the deployed contracts.
 */
export declare const deployL1Contracts: (rpcUrl: string, account: HDAccount | PrivateKeyAccount, chain: Chain, logger: DebugLogger, contractsToDeploy: L1ContractArtifactsForDeployment) => Promise<DeployL1Contracts>;
/**
 * Helper function to deploy ETH contracts.
 * @param walletClient - A viem WalletClient.
 * @param publicClient - A viem PublicClient.
 * @param abi - The ETH contract's ABI (as abitype's Abi).
 * @param bytecode  - The ETH contract's bytecode.
 * @param args - Constructor arguments for the contract.
 * @returns The ETH address the contract was deployed to.
 */
export declare function deployL1Contract(walletClient: WalletClient<HttpTransport, Chain, Account>, publicClient: PublicClient<HttpTransport, Chain>, abi: Narrow<Abi | readonly unknown[]>, bytecode: Hex, args?: readonly unknown[]): Promise<EthAddress>;
//# sourceMappingURL=deploy_l1_contracts.d.ts.map